  Emgu.CV.Properties.StringTable.resources - Embedded, ContainedInManifestFile, 
ImageRuntimeVersion: v2.0.50727
Assembly Emgu.CV, Version=2.1.0.793, Culture=neutral, PublicKeyToken=7281126722ab4438: 
	hash=SHA1, flags=PublicKey
Assembly Emgu.Util, Version=2.1.0.793, Culture=neutral, PublicKeyToken=7281126722ab4438: 
	hash=None, flags=None
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=None, flags=None
Assembly System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly zlib.net, Version=1.0.3.0, Culture=neutral, PublicKeyToken=47d7877cb3620160: 
	hash=None, flags=None
Assembly mscorlib, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.ServiceModel, Version=3.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class Emgu.CV.AdaptiveSkinDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, MorphingMethod): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Process(Image`2, Image`2): PrivateScope, Public, HideBySig
Struct Emgu.CV.AdaptiveSkinDetector+MorphingMethod: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    MorphingMethod NONE = 0 : Public, Static, Literal, HasDefault
    MorphingMethod ERODE = 1 : Public, Static, Literal, HasDefault
    MorphingMethod ERODE_ERODE = 2 : Public, Static, Literal, HasDefault
    MorphingMethod ERODE_DILATE = 3 : Public, Static, Literal, HasDefault
Class Emgu.CV.CameraCalibration: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    CalibrateCamera(MCvPoint3D32f[][], PointF[][], Size, IntrinsicCameraParameters, CALIB_TYPE, ExtrinsicCameraParameters[]&(Out)): PrivateScope, Public, Static, HideBySig
    StereoCalibrate(MCvPoint3D32f[][], PointF[][], PointF[][], IntrinsicCameraParameters, IntrinsicCameraParameters, Size, CALIB_TYPE, MCvTermCriteria, ExtrinsicCameraParameters&(Out), Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, Static, HideBySig
    FindExtrinsicCameraParams2(MCvPoint3D32f[], PointF[], IntrinsicCameraParameters): PrivateScope, Public, Static, HideBySig
    ProjectPoints(MCvPoint3D32f[], ExtrinsicCameraParameters, IntrinsicCameraParameters, Matrix`1[]): PrivateScope, Public, Static, HideBySig
    FindHomography(Matrix`1, Matrix`1, HOMOGRAPHY_METHOD, Double): PrivateScope, Public, Static, HideBySig
    FindHomography(PointF[], PointF[], HOMOGRAPHY_METHOD, Double): PrivateScope, Public, Static, HideBySig
    FindChessboardCorners(Image`2, Size, CALIB_CB_TYPE, PointF[]&(Out)): PrivateScope, Public, Static, HideBySig
    DrawChessboardCorners(Image`2, Size, PointF[], Boolean): PrivateScope, Public, Static, HideBySig
    GetAffineTransform(PointF[], PointF[]): PrivateScope, Public, Static, HideBySig
    GetPerspectiveTransform(PointF[], PointF[]): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.ExtrinsicCameraParameters: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.RotationVector3D, Emgu.CV.Matrix`1[System.Double]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.ExtrinsicCameraParameters]
  Properties:
    Emgu.CV.RotationVector3D RotationVector 'get set' : 
    Emgu.CV.Matrix`1[System.Double] TranslationVector 'get set' : 
    Emgu.CV.Matrix`1[System.Double] ExtrinsicMatrix 'get ' : 
  Methods:
    get_RotationVector(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationVector(RotationVector3D): PrivateScope, Public, HideBySig, SpecialName
    get_TranslationVector(): PrivateScope, Public, HideBySig, SpecialName
    set_TranslationVector(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ExtrinsicMatrix(): PrivateScope, Public, HideBySig, SpecialName
    Equals(ExtrinsicCameraParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.CvArray`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.Util.UnmanagedObject
  Interfaces:
    System.Xml.Serialization.IXmlSerializable
    System.Runtime.Serialization.ISerializable
  Properties:
    Int32 SerializationCompressionRatio 'get set' : 
    IntPtr Ptr 'get set' : 
    System.Drawing.Size Size 'get ' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
    Int32 NumberOfChannels 'get ' : 
    Int32 Rows 'get ' : 
    Int32 Cols 'get ' : 
    Byte[] Bytes 'get set' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.Structure.MCvScalar Trace 'get ' : 
    Double Norm 'get ' : 
  Methods:
    get_SerializationCompressionRatio(): PrivateScope, Public, HideBySig, SpecialName
    set_SerializationCompressionRatio(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Ptr(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Ptr(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Rows(): PrivateScope, Public, HideBySig, SpecialName
    get_Cols(): PrivateScope, Public, HideBySig, SpecialName
    get_Bytes(): PrivateScope, Public, HideBySig, SpecialName
    set_Bytes(Byte[]): PrivateScope, Public, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Trace(): PrivateScope, Public, HideBySig, SpecialName
    get_Norm(): PrivateScope, Public, HideBySig, SpecialName
    DotProduct(CvArray`1): PrivateScope, Public, HideBySig
    Reduce(CvArray`1, REDUCE_DIMENSION, REDUCE_TYPE): PrivateScope, Public, HideBySig
    CopyTo(CvArray`1): PrivateScope, Public, HideBySig
    SetValue(MCvScalar): PrivateScope, Public, HideBySig
    SetValue(Double): PrivateScope, Public, HideBySig
    SetValue(MCvScalar, CvArray`1): PrivateScope, Public, HideBySig
    SetValue(Double, CvArray`1): PrivateScope, Public, HideBySig
    SetRandUniform(UInt64, MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetRandUniform(MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetRandNormal(UInt64, MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetRandNormal(MCvScalar, MCvScalar): PrivateScope, Public, HideBySig
    SetIdentity(MCvScalar): PrivateScope, Public, HideBySig
    SetZero(): PrivateScope, Public, HideBySig
    SetIdentity(): PrivateScope, Public, HideBySig
    _Mul(Double): PrivateScope, Public, HideBySig
    _Mul(CvArray`1): PrivateScope, Public, HideBySig
    _Min(Double): PrivateScope, Public, HideBySig
    _Min(CvArray`1): PrivateScope, Public, HideBySig
    _Max(Double): PrivateScope, Public, HideBySig
    _Max(CvArray`1): PrivateScope, Public, HideBySig
    _And(CvArray`1): PrivateScope, Public, HideBySig
    _Or(CvArray`1): PrivateScope, Public, HideBySig
    _Not(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetSchema(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    ReadXml(XmlReader): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    WriteXml(XmlWriter): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, HasSecurity
Class Emgu.CV.Matrix`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(Int32, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDepth[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TDepth[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.ICloneable
    System.IEquatable`1[Emgu.CV.Matrix`1[TDepth]]
  Properties:
    System.Array ManagedArray 'get set' : 
    TDepth[,] Data 'get set' : 
    Int32 NumberOfChannels 'get ' : 
    Emgu.CV.Structure.MCvMat MCvMat 'get ' : 
    Double Det 'get ' : 
    Double Sum 'get ' : 
    TDepth Item [Int32, Int32] 'get set' : 
  Methods:
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(TDepth[,]): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MCvMat(): PrivateScope, Public, HideBySig, SpecialName
    get_Det(): PrivateScope, Public, HideBySig, SpecialName
    get_Sum(): PrivateScope, Public, HideBySig, SpecialName
    CopyBlank(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reshape(Int32, Int32): PrivateScope, Public, HideBySig
    Convert(): PrivateScope, Public, HideBySig
    Transpose(): PrivateScope, Public, HideBySig
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, TDepth): PrivateScope, Public, HideBySig, SpecialName
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
    GetRow(Int32): PrivateScope, Public, HideBySig
    GetRows(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    GetCol(Int32): PrivateScope, Public, HideBySig
    GetCols(Int32, Int32): PrivateScope, Public, HideBySig
    GetDiag(Int32): PrivateScope, Public, HideBySig
    GetDiag(): PrivateScope, Public, HideBySig
    RemoveRows(Int32, Int32): PrivateScope, Public, HideBySig
    RemoveCols(Int32, Int32): PrivateScope, Public, HideBySig
    ConcateVertical(Matrix`1): PrivateScope, Public, HideBySig
    ConcateHorizontal(Matrix`1): PrivateScope, Public, HideBySig
    MinMax(Double&(Out), Double&(Out), Point&(Out), Point&(Out)): PrivateScope, Public, HideBySig
    Add(Matrix`1): PrivateScope, Public, HideBySig
    Add(TDepth): PrivateScope, Public, HideBySig
    Sub(Matrix`1): PrivateScope, Public, HideBySig
    Sub(TDepth): PrivateScope, Public, HideBySig
    SubR(TDepth): PrivateScope, Public, HideBySig
    Mul(Double): PrivateScope, Public, HideBySig
    Mul(Matrix`1): PrivateScope, Public, HideBySig
    op_Addition(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Matrix`1, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Matrix`1, Matrix`1): PrivateScope, Public, Static, HideBySig, SpecialName
    Cmp(Matrix`1, CMP_TYPE): PrivateScope, Public, HideBySig
    Split(): PrivateScope, Public, HideBySig
    Equals(Matrix`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.HomographyMatrix: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.Matrix`1[System.Double]
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    IsValid(Double): PrivateScope, Public, HideBySig
    ProjectPoints(PointF[]): PrivateScope, Public, HideBySig
Class Emgu.CV.IntrinsicCameraParameters: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.IntrinsicCameraParameters]
  Properties:
    Emgu.CV.Matrix`1[System.Double] DistortionCoeffs 'get set' : 
    Emgu.CV.Matrix`1[System.Double] IntrinsicMatrix 'get set' : 
  Methods:
    get_DistortionCoeffs(): PrivateScope, Public, HideBySig, SpecialName
    set_DistortionCoeffs(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_IntrinsicMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_IntrinsicMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    InitUndistortMap(Int32, Int32, Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, HideBySig
    GetIntrinsicMatrixValues(Int32, Int32, Double, Double, Double&(Out), Double&(Out), Double&(Out), MCvPoint2D64f&(Out), Double&(Out)): PrivateScope, Public, HideBySig
    Undistort(PointF[], Matrix`1, Matrix`1): PrivateScope, Public, HideBySig
    Undistort(Image`2): PrivateScope, Public, HideBySig
    Equals(IntrinsicCameraParameters): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Quaternions: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Interfaces:
    System.IEquatable`1[Emgu.CV.Quaternions]
  Properties:
    Double W   'get set' : 
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Emgu.CV.Structure.MCvPoint3D64f AxisAngle 'get set' : 
    Emgu.CV.Structure.MCvPoint3D64f RotationAxis 'get set' : 
    Double RotationAngle 'get set' : 
  Methods:
    get_W(): PrivateScope, Public, HideBySig, SpecialName
    set_W(Double): PrivateScope, Public, HideBySig, SpecialName
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    SetEuler(Double, Double, Double): PrivateScope, Public, HideBySig
    GetEuler(Double&, Double&, Double&): PrivateScope, Public, HideBySig
    get_AxisAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_AxisAngle(MCvPoint3D64f): PrivateScope, Public, HideBySig, SpecialName
    GetRotationMatrix(Matrix`1): PrivateScope, Public, HideBySig
    RotatePoints(Matrix`1, Matrix`1): PrivateScope, Public, HideBySig
    RotatePoint(MCvPoint3D64f): PrivateScope, Public, HideBySig
    get_RotationAxis(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationAxis(MCvPoint3D64f): PrivateScope, Public, HideBySig, SpecialName
    get_RotationAngle(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationAngle(Double): PrivateScope, Public, HideBySig, SpecialName
    Multiply(Quaternions): PrivateScope, Public, HideBySig
    op_Multiply(Quaternions, Quaternions): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(Quaternions): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.RotationMatrix2D`1[T]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :Emgu.CV.Matrix`1[T]
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    SetRotation(PointF, Double, Double): PrivateScope, Public, HideBySig
    RotatePoints(MCvPoint2D64f[]): PrivateScope, Public, HideBySig
    RotatePoints(PointF[]): PrivateScope, Public, HideBySig
    RotateLines(LineSegment2DF[]): PrivateScope, Public, HideBySig
    RotatePoints(Matrix`1): PrivateScope, Public, HideBySig
Class Emgu.CV.RotationVector3D: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.CV.Matrix`1[System.Double]
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Matrix`1[System.Double] RotationMatrix 'get set' : 
  Methods:
    get_RotationMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_RotationMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IDuplexCapture: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    DuplexQueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    DuplexQuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.ICapture: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    QueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    QuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Emgu.CV.Capture: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IDuplexCapture
    Emgu.CV.ICapture
  Properties:
    Emgu.CV.CvEnum.FLIP FlipType 'get set' : 
    Boolean FlipHorizontal 'get set' : 
    Boolean FlipVertical 'get set' : 
    Int32 Width 'get ' : 
    Int32 Height 'get ' : 
  Methods:
    get_FlipType(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipType(FLIP): PrivateScope, Public, HideBySig, SpecialName
    get_FlipHorizontal(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipHorizontal(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_FlipVertical(): PrivateScope, Public, HideBySig, SpecialName
    set_FlipVertical(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Width(): PrivateScope, Public, HideBySig, SpecialName
    get_Height(): PrivateScope, Public, HideBySig, SpecialName
    GetCaptureProperty(CAP_PROP): PrivateScope, Public, HideBySig
    SetCaptureProperty(CAP_PROP, Double): PrivateScope, Public, HideBySig
    QueryGrayFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    QuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DuplexQueryFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    DuplexQuerySmallFrame(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Interface Emgu.CV.IDuplexCaptureCallback: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    ReceiveFrame(Image`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Emgu.CV.IColor: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Properties:
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
    Int32 Dimension 'get ' : 
  Methods:
    get_MCvScalar(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Dimension(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Struct Emgu.CV.Structure.Bgr: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Color): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Bgr]
  Properties:
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Bgr): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Bgra: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Bgra]
  Properties:
    Double Blue 'get set' : 
    Double Green 'get set' : 
    Double Red 'get set' : 
    Double Alpha 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Blue(): PrivateScope, Public, HideBySig, SpecialName
    set_Blue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Green(): PrivateScope, Public, HideBySig, SpecialName
    set_Green(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Red(): PrivateScope, Public, HideBySig, SpecialName
    set_Red(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Alpha(): PrivateScope, Public, HideBySig, SpecialName
    set_Alpha(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Bgra): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.ColorInfoAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.String ConversionCodename 'get set' : 
  Methods:
    get_ConversionCodename(): PrivateScope, Public, HideBySig, SpecialName
    set_ConversionCodename(String): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.Gray: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Gray]
  Properties:
    Double Intensity 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Intensity(): PrivateScope, Public, HideBySig, SpecialName
    set_Intensity(Double): PrivateScope, Public, HideBySig, SpecialName
    GetHashCode(): PrivateScope, Public, Virtual, HideBySig
    Equals(Gray): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Hls: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Hls]
  Properties:
    Double Hue 'get set' : 
    Double Lightness 'get set' : 
    Double Satuation 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Hue(): PrivateScope, Public, HideBySig, SpecialName
    set_Hue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Lightness(): PrivateScope, Public, HideBySig, SpecialName
    set_Lightness(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Satuation(): PrivateScope, Public, HideBySig, SpecialName
    set_Satuation(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Hls): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Hsv: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Hsv]
  Properties:
    Double Hue 'get set' : 
    Double Satuation 'get set' : 
    Double Value 'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Hue(): PrivateScope, Public, HideBySig, SpecialName
    set_Hue(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Satuation(): PrivateScope, Public, HideBySig, SpecialName
    set_Satuation(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Value(): PrivateScope, Public, HideBySig, SpecialName
    set_Value(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Hsv): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Lab: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Lab]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Lab): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Luv: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Luv]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Luv): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Xyz: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Xyz]
  Properties:
    Double X   'get set' : 
    Double Y   'get set' : 
    Double Z   'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_X(): PrivateScope, Public, HideBySig, SpecialName
    set_X(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Z(): PrivateScope, Public, HideBySig, SpecialName
    set_Z(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Xyz): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Struct Emgu.CV.Structure.Ycc: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IColor
    System.IEquatable`1[Emgu.CV.Structure.Ycc]
  Properties:
    Double Y   'get set' : 
    Double Cr  'get set' : 
    Double Cb  'get set' : 
    Int32 Dimension 'get ' : 
    Emgu.CV.Structure.MCvScalar MCvScalar 'get set' : 
  Methods:
    get_Y(): PrivateScope, Public, HideBySig, SpecialName
    set_Y(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Cr(): PrivateScope, Public, HideBySig, SpecialName
    set_Cr(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Cb(): PrivateScope, Public, HideBySig, SpecialName
    set_Cb(Double): PrivateScope, Public, HideBySig, SpecialName
    Equals(Ycc): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_Dimension(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_MCvScalar(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_MCvScalar(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ToString(): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.Seq`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
    Void .ctor(Int32, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.CvEnum.SEQ_ELTYPE, Emgu.CV.CvEnum.SEQ_KIND, Emgu.CV.CvEnum.SEQ_FLAG, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(IntPtr, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[T]
    System.Collections.IEnumerable
  Properties:
    IntPtr Ptr 'get ' : 
    Emgu.CV.MemStorage Storage 'get ' : 
    Emgu.CV.Structure.MCvSeq MCvSeq 'get ' : 
    T Item [Int32] 'get ' : 
    Emgu.CV.Seq`1[T] HNext 'get set' : 
    Emgu.CV.Seq`1[T] HPrev 'get set' : 
    Emgu.CV.Seq`1[T] VNext 'get set' : 
    Emgu.CV.Seq`1[T] VPrev 'get set' : 
    Int32 Total 'get ' : 
    Double Area 'get ' : 
    Boolean Convex 'get ' : 
    Double Perimeter 'get ' : 
    System.Drawing.Rectangle BoundingRectangle 'get ' : 
  Methods:
    get_Ptr(): PrivateScope, Public, HideBySig, SpecialName
    Push(T): PrivateScope, Public, HideBySig
    PushFront(T): PrivateScope, Public, HideBySig
    PushMulti(T[], BACK_OR_FRONT): PrivateScope, Public, HideBySig
    Pop(): PrivateScope, Public, HideBySig
    PopFront(): PrivateScope, Public, HideBySig
    PopMulti(Int32, BACK_OR_FRONT): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    Insert(Int32, T): PrivateScope, Public, HideBySig
    get_Storage(): PrivateScope, Public, HideBySig, SpecialName
    get_MCvSeq(): PrivateScope, Public, HideBySig, SpecialName
    GetMinAreaRect(): PrivateScope, Public, HideBySig
    GetMinAreaRect(MemStorage): PrivateScope, Public, HideBySig
    GetConvexHull(ORIENTATION, MemStorage): PrivateScope, Public, HideBySig
    GetConvexHull(ORIENTATION): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    ToArray(): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_HNext(): PrivateScope, Public, HideBySig, SpecialName
    set_HNext(Seq`1): PrivateScope, Public, HideBySig, SpecialName
    get_HPrev(): PrivateScope, Public, HideBySig, SpecialName
    set_HPrev(Seq`1): PrivateScope, Public, HideBySig, SpecialName
    get_VNext(): PrivateScope, Public, HideBySig, SpecialName
    set_VNext(Seq`1): PrivateScope, Public, HideBySig, SpecialName
    get_VPrev(): PrivateScope, Public, HideBySig, SpecialName
    set_VPrev(Seq`1): PrivateScope, Public, HideBySig, SpecialName
    Slice(MCvSlice, MemStorage, Boolean): PrivateScope, Public, HideBySig
    get_Total(): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Convex(): PrivateScope, Public, HideBySig, SpecialName
    get_Perimeter(): PrivateScope, Public, HideBySig, SpecialName
    ApproxPoly(Double, MemStorage): PrivateScope, Public, HideBySig
    ApproxPoly(Double, Int32, MemStorage): PrivateScope, Public, HideBySig
    ApproxPoly(Double): PrivateScope, Public, HideBySig
    get_BoundingRectangle(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    Clear(): PrivateScope, Public, HideBySig
    InContour(PointF): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Distance(PointF): PrivateScope, Public, HideBySig
    GetMoments(): PrivateScope, Public, HideBySig
    MatchShapes(Seq`1, CONTOURS_MATCH_TYPE): PrivateScope, Public, HideBySig
    GetConvexityDefacts(MemStorage, ORIENTATION): PrivateScope, Public, HideBySig
    op_Implicit(Seq`1): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.Contour`1[T]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: T, System.ValueType,  NotNullableValueType DefaultConstructor
  :Emgu.CV.Seq`1[T]
    Void .ctor(IntPtr, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.CvEnum.SEQ_ELTYPE, Emgu.CV.CvEnum.SEQ_KIND, Emgu.CV.CvEnum.SEQ_FLAG, Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.MemStorage): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Rectangle BoundingRectangle 'get ' : 
    Emgu.CV.Structure.MCvContour MCvContour 'get ' : 
    Emgu.CV.Contour`1[T] HNext 'get set' : 
    Emgu.CV.Contour`1[T] HPrev 'get set' : 
    Emgu.CV.Contour`1[T] VNext 'get set' : 
    Emgu.CV.Contour`1[T] VPrev 'get set' : 
  Methods:
    InContour(PointF): PrivateScope, Public, Virtual, HideBySig
    get_BoundingRectangle(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_MCvContour(): PrivateScope, Public, HideBySig, SpecialName
    get_HNext(): PrivateScope, Public, HideBySig, SpecialName
    set_HNext(Contour`1): PrivateScope, Public, HideBySig, SpecialName
    get_HPrev(): PrivateScope, Public, HideBySig, SpecialName
    set_HPrev(Contour`1): PrivateScope, Public, HideBySig, SpecialName
    get_VNext(): PrivateScope, Public, HideBySig, SpecialName
    set_VNext(Contour`1): PrivateScope, Public, HideBySig, SpecialName
    get_VPrev(): PrivateScope, Public, HideBySig, SpecialName
    set_VPrev(Contour`1): PrivateScope, Public, HideBySig, SpecialName
    ApproxPoly(Double, MemStorage): PrivateScope, Public, HideBySig
    ApproxPoly(Double, Int32, MemStorage): PrivateScope, Public, HideBySig
    ApproxPoly(Double): PrivateScope, Public, HideBySig
Class Emgu.CV.ConvolutionKernelF: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.Matrix`1[System.Single]
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[,], System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point Center 'get set' : 
  Methods:
    Flip(FLIP): PrivateScope, Public, HideBySig
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(Point): PrivateScope, Public, HideBySig, SpecialName
    Transpose(): PrivateScope, Public, HideBySig
Class Emgu.CV.CvException: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :System.Exception
    Void .ctor(Int32, System.String, System.String, System.String, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Status 'get set' : 
    System.String ErrorStr 'get ' : 
    System.String FunctionName 'get set' : 
    System.String ErrorMessage 'get set' : 
    System.String FileName 'get set' : 
    Int32 Line 'get set' : 
  Methods:
    get_Status(): PrivateScope, Public, HideBySig, SpecialName
    set_Status(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorStr(): PrivateScope, Public, HideBySig, SpecialName
    get_FunctionName(): PrivateScope, Public, HideBySig, SpecialName
    set_FunctionName(String): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorMessage(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorMessage(String): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    set_FileName(String): PrivateScope, Public, HideBySig, SpecialName
    get_Line(): PrivateScope, Public, HideBySig, SpecialName
    set_Line(Int32): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.DenseHistogram: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Emgu.CV.Structure.RangeF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32[], Emgu.CV.Structure.RangeF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Runtime.Serialization.ISerializable
    System.IEquatable`1[Emgu.CV.DenseHistogram]
  Properties:
    Double Item [Int32] 'get ' : 
    Double Item [Int32, Int32] 'get ' : 
    Double Item [Int32, Int32, Int32] 'get ' : 
    Emgu.CV.Structure.MCvHistogram MCvHistogram 'get ' : 
    Int32 Dimension 'get ' : 
    Dimension[] BinDimension 'get ' : 
    Emgu.CV.MatND`1[System.Single] MatND 'get ' : 
    Emgu.CV.Structure.RangeF[] Ranges 'get ' : 
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    Calculate(Image`2[], Boolean, Image`2): PrivateScope, Public, HideBySig
    Calculate(Matrix`1[], Boolean, Matrix`1): PrivateScope, Public, HideBySig
    Calculate(IImage[], Boolean, Image`2): PrivateScope, Public, HideBySig
    MinMax(Single&(Out), Single&(Out), Int32[]&(Out), Int32[]&(Out)): PrivateScope, Public, HideBySig
    BackProject(Image`2[]): PrivateScope, Public, HideBySig
    BackProjectPatch(Image`2[], Size, HISTOGRAM_COMP_METHOD, Double): PrivateScope, Public, HideBySig
    BackProject(Matrix`1[]): PrivateScope, Public, HideBySig
    Threshold(Double): PrivateScope, Public, HideBySig
    Normalize(Double): PrivateScope, Public, HideBySig
    Copy(DenseHistogram): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MCvHistogram(): PrivateScope, Public, HideBySig, SpecialName
    get_Dimension(): PrivateScope, Public, HideBySig, SpecialName
    get_BinDimension(): PrivateScope, Public, HideBySig, SpecialName
    get_MatND(): PrivateScope, Public, HideBySig, SpecialName
    get_Ranges(): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(DenseHistogram): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.EigenObjectRecognizer: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte][], Emgu.CV.Structure.MCvTermCriteria ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte][], System.String[], Emgu.CV.Structure.MCvTermCriteria ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte][], System.String[], Double, Emgu.CV.Structure.MCvTermCriteria ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Single][] EigenImages 'get set' : 
    System.String[] Labels 'get set' : 
    Double EigenDistanceThreshold 'get set' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Single] AverageImage 'get set' : 
    Emgu.CV.Matrix`1[System.Single][] EigenValues 'get set' : 
  Methods:
    get_EigenImages(): PrivateScope, Public, HideBySig, SpecialName
    set_EigenImages(Image`2[]): PrivateScope, Public, HideBySig, SpecialName
    get_Labels(): PrivateScope, Public, HideBySig, SpecialName
    set_Labels(String[]): PrivateScope, Public, HideBySig, SpecialName
    get_EigenDistanceThreshold(): PrivateScope, Public, HideBySig, SpecialName
    set_EigenDistanceThreshold(Double): PrivateScope, Public, HideBySig, SpecialName
    get_AverageImage(): PrivateScope, Public, HideBySig, SpecialName
    set_AverageImage(Image`2): PrivateScope, Public, HideBySig, SpecialName
    get_EigenValues(): PrivateScope, Public, HideBySig, SpecialName
    set_EigenValues(Matrix`1[]): PrivateScope, Public, HideBySig, SpecialName
    CalcEigenObjects(Image`2[], MCvTermCriteria&, Image`2[]&(Out), Image`2&(Out)): PrivateScope, Public, Static, HideBySig
    EigenDecomposite(Image`2, Image`2[], Image`2): PrivateScope, Public, Static, HideBySig
    EigenProjection(Single[]): PrivateScope, Public, HideBySig
    GetEigenDistances(Image`2): PrivateScope, Public, HideBySig
    FindMostSimilarObject(Image`2, Int32&(Out), Single&(Out), String&(Out)): PrivateScope, Public, HideBySig
    Recognize(Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.FeatureTree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Single[][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Single[][], Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Int32, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Matrix`1[System.Single] DescriptorMatrix 'get ' : 
  Methods:
    get_DescriptorMatrix(): PrivateScope, Public, HideBySig, SpecialName
    FindFeatures(Single[][], Matrix`1&(Out), Matrix`1&(Out), Int32, Int32): PrivateScope, Public, HideBySig
Struct Emgu.CV.Flann.CenterInitType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.Flann.CenterInitType RANDOM = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.Flann.CenterInitType GONZALES = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.Flann.CenterInitType KMEANSPP = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.Flann.Index: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Int32, Int32, Int32, Emgu.CV.Flann.CenterInitType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Int32, Int32, Emgu.CV.Flann.CenterInitType, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Single, Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    KnnSearch(Matrix`1, Matrix`1, Matrix`1, Int32, Int32): PrivateScope, Public, HideBySig
    RadiusSearch(Matrix`1, Matrix`1, Matrix`1, Single, Int32): PrivateScope, Public, HideBySig
Struct Emgu.CV.Geodetic.GeodeticCoordinate: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Geodetic.GeodeticCoordinate]
  Fields:
    Emgu.CV.Geodetic.GeodeticCoordinate Empty : Public, Static, InitOnly
  Properties:
    Double Latitude 'get set' : 
    Double Longitude 'get set' : 
    Double Altitude 'get set' : 
  Methods:
    get_Latitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Latitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Longitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Longitude(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Altitude(): PrivateScope, Public, HideBySig, SpecialName
    set_Altitude(Double): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(GeodeticCoordinate, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(GeodeticCoordinate): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.Geodetic.TransformationWGS84: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Geodetic2ECEF(GeodeticCoordinate): PrivateScope, Public, Static, HideBySig
    ECEF2Geodetic(MCvPoint3D64f): PrivateScope, Public, Static, HideBySig
    Geodetic2ENU(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig
    Geodetic2ENU(GeodeticCoordinate, GeodeticCoordinate, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig
    Geodetic2NED(GeodeticCoordinate, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig
    Geodetic2NED(GeodeticCoordinate, GeodeticCoordinate, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig
    ENU2Geodetic(MCvPoint3D64f, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig
    ENU2Geodetic(MCvPoint3D64f, GeodeticCoordinate, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig
    NED2Geodetic(MCvPoint3D64f, GeodeticCoordinate, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig
    NED2Geodetic(MCvPoint3D64f, GeodeticCoordinate): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.HaarCascade: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.HOGDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, System.Drawing.Size, Int32, Int32, Double, Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetDefaultPeopleDetector(): PrivateScope, Public, Static, HideBySig
    SetSVMDetector(Single[]): PrivateScope, Public, HideBySig
    DetectMultiScale(Image`2, Double, Size, Size, Double, Int32): PrivateScope, Public, HideBySig
    DetectMultiScale(Image`2): PrivateScope, Public, HideBySig
Interface Emgu.CV.IImage: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Interfaces:
    System.IDisposable
    System.ICloneable
  Properties:
    System.Drawing.Bitmap Bitmap 'get ' : 
    System.Drawing.Size Size 'get ' : 
    IntPtr Ptr 'get ' : 
    Int32 NumberOfChannels 'get ' : 
  Methods:
    get_Bitmap(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Split(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_Ptr(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Save(String): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.Image`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(TDepth[,,]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Bitmap): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.Size): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Image`2[Emgu.CV.Structure.Gray,TDepth][]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IImage
    System.ICloneable
    System.IEquatable`1[Emgu.CV.Image`2[TColor,TDepth]]
  Properties:
    TDepth[,,] Data 'get set' : 
    Emgu.CV.Structure.MIplImage MIplImage 'get ' : 
    System.Drawing.Rectangle ROI 'get set' : 
    Int32 NumberOfChannels 'get ' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.CvEnum.IPL_DEPTH CvDepth 'get ' : 
    Boolean IsROISet 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,TDepth] Item [Int32] 'get set' : 
    TColor Item [Int32, Int32] 'get set' : 
    TColor Item [System.Drawing.Point] 'get set' : 
    System.Drawing.Bitmap Bitmap 'get set' : 
  Methods:
    Split(): PrivateScope, Public, HideBySig
    Save(String): PrivateScope, Public, Virtual, HideBySig
    _EqualizeHist(): PrivateScope, Public, HideBySig
    RunningAvg(Image`2, Double, Image`2): PrivateScope, Public, HideBySig
    AbsDiff(Image`2): PrivateScope, Public, HideBySig
    AbsDiff(TColor): PrivateScope, Public, HideBySig
    Pow(Double): PrivateScope, Public, HideBySig
    Exp(): PrivateScope, Public, HideBySig
    Log(): PrivateScope, Public, HideBySig
    Sample(LineSegment2D): PrivateScope, Public, HideBySig
    Sample(LineSegment2D, CONNECTIVITY): PrivateScope, Public, HideBySig
    Resize(Int32, Int32): PrivateScope, Public, HideBySig (Obsolete)
    Resize(Int32, Int32, Boolean): PrivateScope, Public, HideBySig (Obsolete)
    Resize(Double): PrivateScope, Public, HideBySig (Obsolete)
    Resize(Int32, Int32, INTER): PrivateScope, Public, HideBySig
    Resize(Int32, Int32, INTER, Boolean): PrivateScope, Public, HideBySig
    Resize(Double, INTER): PrivateScope, Public, HideBySig
    Rotate(Double, TColor): PrivateScope, Public, HideBySig
    WarpAffine(Matrix`1, INTER, WARP, TColor): PrivateScope, Public, HideBySig
    WarpAffine(Matrix`1, Int32, Int32, INTER, WARP, TColor): PrivateScope, Public, HideBySig
    WarpPerspective(Matrix`1, INTER, WARP, TColor): PrivateScope, Public, HideBySig
    WarpPerspective(Matrix`1, Int32, Int32, INTER, WARP, TColor): PrivateScope, Public, HideBySig
    Rotate(Double, TColor, Boolean): PrivateScope, Public, HideBySig
    LogPolar(PointF, Double, Int32): PrivateScope, Public, HideBySig
    Convert(): PrivateScope, Public, HideBySig
    ConvertFrom(Image`2): PrivateScope, Public, HideBySig
    ConvertScale(Double, Double): PrivateScope, Public, HideBySig
    get_Bitmap(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Bitmap(Bitmap): PrivateScope, Public, HideBySig, SpecialName
    ToBitmap(): PrivateScope, Public, HideBySig
    ToBitmap(Int32, Int32): PrivateScope, Public, HideBySig
    PyrDown(): PrivateScope, Public, HideBySig
    PyrUp(): PrivateScope, Public, HideBySig
    BuildPyramid(Int32): PrivateScope, Public, HideBySig
    InPaint(Image`2, Double): PrivateScope, Public, HideBySig
    MorphologyEx(StructuringElementEx, CV_MORPH_OP, Int32): PrivateScope, Public, HideBySig
    Erode(Int32): PrivateScope, Public, HideBySig
    Dilate(Int32): PrivateScope, Public, HideBySig
    _MorphologyEx(StructuringElementEx, CV_MORPH_OP, Int32): PrivateScope, Public, HideBySig
    _Erode(Int32): PrivateScope, Public, HideBySig
    _Dilate(Int32): PrivateScope, Public, HideBySig
    Action(Action`1): PrivateScope, Public, HideBySig
    Action(Image`2, Action`2): PrivateScope, Public, HideBySig
    Convert(Func`4): PrivateScope, Public, HideBySig
    Convert(Converter`2): PrivateScope, Public, HideBySig
    Convert(Image`2, Func`3): PrivateScope, Public, HideBySig
    Convert(Image`2, Image`2, Func`4): PrivateScope, Public, HideBySig
    Convert(Image`2, Image`2, Image`2, Func`5): PrivateScope, Public, HideBySig
    op_BitwiseAnd(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseAnd(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_BitwiseOr(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_OnesComplement(Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, TColor): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(TColor, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Image`2, ConvolutionKernelF): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Image`2, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Division(Double, Image`2): PrivateScope, Public, Static, HideBySig, SpecialName
    SmoothBlur(Int32, Int32): PrivateScope, Public, HideBySig
    SmoothBlur(Int32, Int32, Boolean): PrivateScope, Public, HideBySig
    SmoothMedian(Int32): PrivateScope, Public, HideBySig
    SmoothBilatral(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    SmoothGaussian(Int32): PrivateScope, Public, HideBySig
    SmoothGaussian(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig
    _SmoothGaussian(Int32): PrivateScope, Public, HideBySig
    _SmoothGaussian(Int32, Int32, Double, Double): PrivateScope, Public, HideBySig
    Convolution(ConvolutionKernelF): PrivateScope, Public, HideBySig
    Integral(): PrivateScope, Public, HideBySig
    Integral(Image`2&(Out), Image`2&(Out)): PrivateScope, Public, HideBySig
    Integral(Image`2&(Out), Image`2&(Out), Image`2&(Out)): PrivateScope, Public, HideBySig
    ThresholdToZero(TColor): PrivateScope, Public, HideBySig
    ThresholdToZeroInv(TColor): PrivateScope, Public, HideBySig
    ThresholdTrunc(TColor): PrivateScope, Public, HideBySig
    ThresholdBinary(TColor, TColor): PrivateScope, Public, HideBySig
    ThresholdBinaryInv(TColor, TColor): PrivateScope, Public, HideBySig
    _ThresholdToZero(TColor): PrivateScope, Public, HideBySig
    _ThresholdToZeroInv(TColor): PrivateScope, Public, HideBySig
    _ThresholdTrunc(TColor): PrivateScope, Public, HideBySig
    _ThresholdBinary(TColor, TColor): PrivateScope, Public, HideBySig
    _ThresholdBinaryInv(TColor, TColor): PrivateScope, Public, HideBySig
    AvgSdv(TColor&(Out), MCvScalar&(Out), Image`2): PrivateScope, Public, HideBySig
    AvgSdv(TColor&(Out), MCvScalar&(Out)): PrivateScope, Public, HideBySig
    CountNonzero(): PrivateScope, Public, HideBySig
    MinMax(Double[]&(Out), Double[]&(Out), Point[]&(Out), Point[]&(Out)): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Flip(FLIP): PrivateScope, Public, HideBySig
    _Flip(FLIP): PrivateScope, Public, HideBySig
    ConcateVertical(Image`2): PrivateScope, Public, HideBySig
    ConcateHorizontal(Image`2): PrivateScope, Public, HideBySig
    GetMoments(Boolean): PrivateScope, Public, HideBySig
    _GammaCorrect(Double): PrivateScope, Public, HideBySig
    get_Data(): PrivateScope, Public, HideBySig, SpecialName
    set_Data(TDepth[,,]): PrivateScope, Public, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    get_MIplImage(): PrivateScope, Public, HideBySig, SpecialName
    set_ROI(Rectangle): PrivateScope, Public, HideBySig, SpecialName
    get_ROI(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_CvDepth(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_IsROISet(): PrivateScope, Public, HideBySig, SpecialName
    GetAverage(): PrivateScope, Public, HideBySig
    GetAverage(Image`2): PrivateScope, Public, HideBySig
    GetSum(): PrivateScope, Public, HideBySig
    SetValue(TColor): PrivateScope, Public, HideBySig
    SetValue(TColor, Image`2): PrivateScope, Public, HideBySig
    Copy(Image`2, Image`2): PrivateScope, Public, HideBySig
    Copy(Image`2): PrivateScope, Public, HideBySig
    Copy(Rectangle): PrivateScope, Public, HideBySig
    Copy(MCvBox2D): PrivateScope, Public, HideBySig
    Copy(): PrivateScope, Public, HideBySig
    CopyBlank(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, HideBySig
    GetSubRect(Rectangle): PrivateScope, Public, HideBySig
    Draw(Rectangle, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(Cross2DF, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(LineSegment2DF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(LineSegment2D, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(IConvexPolygonF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    FillConvexPoly(Point[], TColor): PrivateScope, Public, HideBySig
    DrawPolyline(Point[], Boolean, TColor, Int32): PrivateScope, Public, HideBySig
    DrawPolyline(Point[][], Boolean, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(CircleF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(Ellipse, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(String, MCvFont&, Point, TColor): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Draw(Seq`1, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(Seq`1, TColor, TColor, Int32, Int32): PrivateScope, Public, HideBySig
    Draw(Seq`1, TColor, TColor, Int32, Int32, Point): PrivateScope, Public, HideBySig
    DetectHaarCascade(HaarCascade): PrivateScope, Public, HideBySig
    DetectHaarCascade(HaarCascade, Double, Int32, HAAR_DETECTION_TYPE, Size): PrivateScope, Public, HideBySig
    HoughLinesBinary(Double, Double, Int32, Double, Double): PrivateScope, Public, HideBySig
    HoughLines(TColor, TColor, Double, Double, Int32, Double, Double): PrivateScope, Public, HideBySig
    HoughCircles(TColor, TColor, Double, Double, Int32, Int32): PrivateScope, Public, HideBySig
    FindContours(): PrivateScope, Public, HideBySig
    FindContours(CHAIN_APPROX_METHOD, RETR_TYPE): PrivateScope, Public, HideBySig
    FindContours(CHAIN_APPROX_METHOD, RETR_TYPE, MemStorage): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Image`2): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Point): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Point, TColor): PrivateScope, Public, HideBySig, SpecialName
    Sobel(Int32, Int32, Int32): PrivateScope, Public, HideBySig
    Laplace(Int32): PrivateScope, Public, HideBySig
    Canny(TColor, TColor): PrivateScope, Public, HideBySig
    ExtractSURF(MCvSURFParams&): PrivateScope, Public, HideBySig
    ExtractSURF(Image`2, MCvSURFParams&): PrivateScope, Public, HideBySig
    GetStarKeypoints(StarDetector&): PrivateScope, Public, HideBySig
    GetFASTKeypoints(Int32, Boolean): PrivateScope, Public, HideBySig
    ExtractMSER(Image`2, MCvMSERParams&, MemStorage): PrivateScope, Public, HideBySig
    GoodFeaturesToTrack(Int32, Double, Double, Int32): PrivateScope, Public, HideBySig
    GoodFeaturesToTrack(Int32, Double, Double, Int32, Double): PrivateScope, Public, HideBySig
    GoodFeaturesToTrack(Int32, Double, Double, Int32, Boolean, Double): PrivateScope, Public, HideBySig
    FindCornerSubPix(PointF[][], Size, Size, MCvTermCriteria): PrivateScope, Public, HideBySig
    MatchTemplate(Image`2, TM_TYPE): PrivateScope, Public, HideBySig
    Snake(Seq`1, Single, Single, Single, Size, MCvTermCriteria, MemStorage): PrivateScope, Public, HideBySig
    Snake(Point[], Single, Single, Single, Size, MCvTermCriteria, Boolean): PrivateScope, Public, HideBySig
    And(Image`2): PrivateScope, Public, HideBySig
    And(Image`2, Image`2): PrivateScope, Public, HideBySig
    And(TColor): PrivateScope, Public, HideBySig
    And(TColor, Image`2): PrivateScope, Public, HideBySig
    Or(Image`2): PrivateScope, Public, HideBySig
    Or(Image`2, Image`2): PrivateScope, Public, HideBySig
    Or(TColor): PrivateScope, Public, HideBySig
    Or(TColor, Image`2): PrivateScope, Public, HideBySig
    Xor(Image`2): PrivateScope, Public, HideBySig
    Xor(Image`2, Image`2): PrivateScope, Public, HideBySig
    Xor(TColor): PrivateScope, Public, HideBySig
    Xor(TColor, Image`2): PrivateScope, Public, HideBySig
    Not(): PrivateScope, Public, HideBySig
    Max(Image`2): PrivateScope, Public, HideBySig
    Max(Double): PrivateScope, Public, HideBySig
    Min(Image`2): PrivateScope, Public, HideBySig
    Min(Double): PrivateScope, Public, HideBySig
    InRange(TColor, TColor): PrivateScope, Public, HideBySig
    InRange(Image`2, Image`2): PrivateScope, Public, HideBySig
    Cmp(Image`2, CMP_TYPE): PrivateScope, Public, HideBySig
    Cmp(Double, CMP_TYPE): PrivateScope, Public, HideBySig
    Equals(Image`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GrabCut(Rectangle, Int32): PrivateScope, Public, HideBySig
    Sub(Image`2): PrivateScope, Public, HideBySig
    Sub(Image`2, Image`2): PrivateScope, Public, HideBySig
    Sub(TColor): PrivateScope, Public, HideBySig
    SubR(TColor): PrivateScope, Public, HideBySig
    SubR(TColor, Image`2): PrivateScope, Public, HideBySig
    Add(Image`2): PrivateScope, Public, HideBySig
    Add(Image`2, Image`2): PrivateScope, Public, HideBySig
    Add(TColor): PrivateScope, Public, HideBySig
    Mul(Image`2, Double): PrivateScope, Public, HideBySig
    Mul(Image`2): PrivateScope, Public, HideBySig
    Mul(Double): PrivateScope, Public, HideBySig
    Acc(Image`2, Image`2): PrivateScope, Public, HideBySig
    Acc(Image`2): PrivateScope, Public, HideBySig
    AddWeighted(Image`2, Double, Double, Double): PrivateScope, Public, HideBySig
    RunningAvg(Image`2, Double): PrivateScope, Public, HideBySig
Struct Emgu.CV.ImageFeature: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Single[] Descriptor 'get set' : 
    Emgu.CV.Structure.MKeyPoint KeyPoint 'get set' : 
  Methods:
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    set_Descriptor(Single[]): PrivateScope, Public, HideBySig, SpecialName
    get_KeyPoint(): PrivateScope, Public, HideBySig, SpecialName
    set_KeyPoint(MKeyPoint): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Kalman: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single], Emgu.CV.Matrix`1[System.Single]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvKalman MCvKalman 'get ' : 
    Emgu.CV.Matrix`1[System.Single] PredictedState 'get set' : 
    Emgu.CV.Matrix`1[System.Single] CorrectedState 'get set' : 
    Emgu.CV.Matrix`1[System.Single] MeasurementMatrix 'get set' : 
    Emgu.CV.Matrix`1[System.Single] TransitionMatrix 'get set' : 
    Emgu.CV.Matrix`1[System.Single] ProcessNoiseCovariance 'get set' : 
    Emgu.CV.Matrix`1[System.Single] MeasurementNoiseCovariance 'get set' : 
    Emgu.CV.Matrix`1[System.Single] ErrorCovariancePost 'get set' : 
    Emgu.CV.Matrix`1[System.Single] ErrorCovariancePre 'get set' : 
    Emgu.CV.Matrix`1[System.Single] ControlMatrix 'get set' : 
    Emgu.CV.Matrix`1[System.Single] Gain 'get set' : 
  Methods:
    get_MCvKalman(): PrivateScope, Public, HideBySig, SpecialName
    Predict(Matrix`1): PrivateScope, Public, HideBySig
    Correct(Matrix`1): PrivateScope, Public, HideBySig
    Predict(): PrivateScope, Public, HideBySig
    get_PredictedState(): PrivateScope, Public, HideBySig, SpecialName
    set_PredictedState(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_CorrectedState(): PrivateScope, Public, HideBySig, SpecialName
    set_CorrectedState(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    set_MeasurementMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_TransitionMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_TransitionMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_ProcessNoiseCovariance(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessNoiseCovariance(): PrivateScope, Public, HideBySig, SpecialName
    set_MeasurementNoiseCovariance(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_MeasurementNoiseCovariance(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorCovariancePost(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovariancePost(): PrivateScope, Public, HideBySig, SpecialName
    set_ErrorCovariancePre(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ErrorCovariancePre(): PrivateScope, Public, HideBySig, SpecialName
    set_ControlMatrix(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_ControlMatrix(): PrivateScope, Public, HideBySig, SpecialName
    set_Gain(Matrix`1): PrivateScope, Public, HideBySig, SpecialName
    get_Gain(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.LDetector: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Radius : Public
    Int32 Threshold : Public
    Int32 NOctaves : Public
    Int32 NViews : Public
    Boolean Verbose : Public, HasFieldMarshal
    Double BaseFeatureSize : Public
    Double ClusteringDistance : Public
  Methods:
    SetDefaultParameters(): PrivateScope, Public, HideBySig
    DetectKeyPoints(Image`2, Int32, Boolean): PrivateScope, Public, HideBySig
Class Emgu.CV.Map`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Image`2[TColor,TDepth]
    Void .ctor(System.Drawing.RectangleF, System.Drawing.PointF, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.RectangleF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.RectangleF Area 'get ' : 
    System.Drawing.PointF Resolution 'get ' : 
    System.Drawing.RectangleF ROI 'get set' : 
  Methods:
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Resolution(): PrivateScope, Public, HideBySig, SpecialName
    MapPointToImagePoint(MCvPoint2D64f): PrivateScope, Public, HideBySig
    MapPointToImagePoint(PointF): PrivateScope, Public, HideBySig
    ImagePointToMapPoint(Point): PrivateScope, Public, HideBySig
    Copy(RectangleF): PrivateScope, Public, HideBySig
    set_ROI(RectangleF): PrivateScope, Public, HideBySig, SpecialName
    get_ROI(): PrivateScope, Public, HideBySig, SpecialName
    Draw(RectangleF, TColor, Int32): PrivateScope, Public, HideBySig
    Draw(LineSegment2DF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig
    Draw(CircleF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig
    Draw(IConvexPolygonF, TColor, Int32): PrivateScope, Public, Virtual, HideBySig
    Draw(String, MCvFont&, PointF, TColor): PrivateScope, Public, HideBySig
    DrawPolyline(PointF[], Boolean, TColor, Int32): PrivateScope, Public, HideBySig
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
Class Emgu.CV.MatND`1[TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.CvArray`1[TDepth]
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.MatND`1[TDepth]]
  Properties:
    Int32 NumberOfChannels 'get ' : 
    System.Array ManagedArray 'get set' : 
    Emgu.CV.Structure.MCvMatND MCvMatND 'get ' : 
  Methods:
    get_NumberOfChannels(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_ManagedArray(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    set_ManagedArray(Array): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetObjectData(SerializationInfo, StreamingContext): PrivateScope, Public, Virtual, HideBySig, HasSecurity
    ReadXml(XmlReader): PrivateScope, Public, Virtual, HideBySig
    WriteXml(XmlWriter): PrivateScope, Public, Virtual, HideBySig
    get_MCvMatND(): PrivateScope, Public, HideBySig, SpecialName
    Convert(): PrivateScope, Public, HideBySig
    Equals(MatND`1): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.MemStorage: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Clear(): PrivateScope, Public, HideBySig
    CreateChildMemStorage(): PrivateScope, Public, HideBySig
Class Emgu.CV.MotionHistory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, System.DateTime): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Single] SegmentMask 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] Mask 'get ' : 
  Methods:
    get_SegmentMask(): PrivateScope, Public, HideBySig, SpecialName
    get_Mask(): PrivateScope, Public, HideBySig, SpecialName
    Update(Image`2): PrivateScope, Public, HideBySig
    Update(Image`2, DateTime): PrivateScope, Public, HideBySig
    GetMotionComponents(MemStorage): PrivateScope, Public, HideBySig
    MotionInfo(Rectangle, Double&(Out), Double&(Out)): PrivateScope, Public, HideBySig
Class Emgu.CV.Octree: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f[], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    BuildTree(MCvPoint3D32f[], Int32, Int32): PrivateScope, Public, HideBySig
    GetPointsWithinSphere(MCvPoint3D32f, Single): PrivateScope, Public, HideBySig
Class Emgu.CV.OpticalFlow: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    PyrLK(Image`2, Image`2, PointF[], Size, Int32, MCvTermCriteria, PointF[]&(Out), Byte[]&(Out), Single[]&(Out)): PrivateScope, Public, Static, HideBySig
    PyrLK(Image`2, Image`2, Image`2, Image`2, PointF[], Size, Int32, MCvTermCriteria, LKFLOW_TYPE, PointF[]&(Out), Byte[]&(Out), Single[]&(Out)): PrivateScope, Public, Static, HideBySig
    LK(Image`2, Image`2, Size, Image`2, Image`2): PrivateScope, Public, Static, HideBySig
    HS(Image`2, Image`2, Boolean, Image`2, Image`2, Double, MCvTermCriteria): PrivateScope, Public, Static, HideBySig
    BM(Image`2, Image`2, Size, Size, Size, Boolean, Image`2, Image`2): PrivateScope, Public, Static, HideBySig
    Farneback(Image`2, Image`2, Image`2, Image`2, Double, Int32, Int32, Int32, Int32, Double, OPTICALFLOW_FARNEBACK_FLAG): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.PatchGenerator: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double BackgroundMin : Public
    Double BackgroundMax : Public
    Double NoiseRange : Public
    Boolean RandomBlur : Public, HasFieldMarshal
    Double LambdaMin : Public
    Double LambdaMax : Public
    Double ThetaMin : Public
    Double ThetaMax : Public
    Double PhiMin : Public
    Double PhiMax : Public
  Methods:
    SetDefaultParameters(): PrivateScope, Public, HideBySig
Struct Emgu.CV.CvEnum.NORM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.NORM_TYPE CV_C = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_L1 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_L2 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_NORM_MASK = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_RELATIVE = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_DIFF = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_MINMAX = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_DIFF_C = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_DIFF_L1 = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_DIFF_L2 = 20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_RELATIVE_C = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_RELATIVE_L1 = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.NORM_TYPE CV_RELATIVE_L2 = 12 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.REDUCE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.REDUCE_TYPE CV_REDUCE_SUM = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.REDUCE_TYPE CV_REDUCE_AVG = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.REDUCE_TYPE CV_REDUCE_MAX = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.REDUCE_TYPE CV_REDUCE_MIN = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.REDUCE_DIMENSION: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.REDUCE_DIMENSION SINGLE_ROW = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.REDUCE_DIMENSION SINGLE_COL = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.REDUCE_DIMENSION AUTO = -1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CMP_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_EQ = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_GT = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_GE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_LT = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_LE = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CMP_TYPE CV_CMP_NE = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.APPROX_POLY_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.APPROX_POLY_TYPE CV_POLY_APPROX_DP = 0 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CAP_PROP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_POS_MSEC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_POS_FRAMES = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_POS_AVI_RATIO = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FRAME_WIDTH = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FRAME_HEIGHT = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FPS = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FOURCC = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FRAME_COUNT = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_FORMAT = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_MODE = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_BRIGHTNESS = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_CONTRAST = 11 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_SATURATION = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_HUE = 13 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_GAIN = 14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CAP_PROP CV_CAP_PROP_CONVERT_RGB = 15 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CHAIN_APPROX_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_CHAIN_CODE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_CHAIN_APPROX_NONE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_CHAIN_APPROX_SIMPLE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_CHAIN_APPROX_TC89_L1 = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_CHAIN_APPROX_TC89_KCOS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHAIN_APPROX_METHOD CV_LINK_RUNS = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.COLOR_CONVERSION: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2BGRA = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGRA2BGR = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2GRAY = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_GRAY2BGR = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_GRAY2BGRA = 9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGRA2GRAY = 10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2BGR565 = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5652BGR = 14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGRA2BGR565 = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5652BGRA = 18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_GRAY2BGR565 = 20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5652GRAY = 21 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2BGR555 = 22 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5552BGR = 24 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGRA2BGR555 = 26 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5552BGRA = 28 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_GRAY2BGR555 = 30 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR5552GRAY = 31 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2XYZ = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_XYZ2BGR = 34 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2YCrCb = 36 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_YCrCb2BGR = 38 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2HSV = 40 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2Lab = 44 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BayerBG2BGR = 46 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BayerGB2BGR = 47 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BayerRG2BGR = 48 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BayerGR2BGR = 49 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2Luv = 50 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_BGR2HLS = 52 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_HSV2BGR = 54 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_Lab2BGR = 56 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_Luv2BGR = 58 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COLOR_CONVERSION CV_HLS2BGR = 60 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FILTER_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FILTER_TYPE CV_GAUSSIAN_5x5 = 7 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FONT: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_SIMPLEX = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_PLAIN = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_DUPLEX = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_COMPLEX = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_TRIPLEX = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_COMPLEX_SMALL = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_SCRIPT_SIMPLEX = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FONT CV_FONT_HERSHEY_SCRIPT_COMPLEX = 7 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.GEMM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.GEMM_TYPE CV_GEMM_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GEMM_TYPE CV_GEMM_A_T = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GEMM_TYPE CV_GEMM_B_T = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GEMM_TYPE CV_GEMM_C_T = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HOUGH_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HOUGH_TYPE CV_HOUGH_STANDARD = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HOUGH_TYPE CV_HOUGH_PROBABILISTIC = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HOUGH_TYPE CV_HOUGH_MULTI_SCALE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HOUGH_TYPE CV_HOUGH_GRADIENT = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.INPAINT_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.INPAINT_TYPE CV_INPAINT_NS = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INPAINT_TYPE CV_INPAINT_TELEA = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.INTER: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.INTER CV_INTER_NN = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INTER CV_INTER_LINEAR = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INTER CV_INTER_CUBIC = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INTER CV_INTER_AREA = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SMOOTH_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SMOOTH_TYPE CV_BLUR_NO_SCALE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SMOOTH_TYPE CV_BLUR = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SMOOTH_TYPE CV_GAUSSIAN = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SMOOTH_TYPE CV_MEDIAN = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SMOOTH_TYPE CV_BILATERAL = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.LOAD_IMAGE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.LOAD_IMAGE_TYPE CV_LOAD_IMAGE_UNCHANGED = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LOAD_IMAGE_TYPE CV_LOAD_IMAGE_GRAYSCALE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LOAD_IMAGE_TYPE CV_LOAD_IMAGE_COLOR = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LOAD_IMAGE_TYPE CV_LOAD_IMAGE_ANYDEPTH = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LOAD_IMAGE_TYPE CV_LOAD_IMAGE_ANYCOLOR = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.MAT_DEPTH: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.MAT_DEPTH CV_8U = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_8S = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_16U = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_16S = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_32S = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_32F = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MAT_DEPTH CV_64F = 6 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.RAND_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.RAND_TYPE CV_RAND_UNI = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RAND_TYPE CV_RAND_NORMAL = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.RETR_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.RETR_TYPE CV_RETR_EXTERNAL = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RETR_TYPE CV_RETR_LIST = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RETR_TYPE CV_RETR_CCOMP = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.RETR_TYPE CV_RETR_TREE = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SEQ_ELTYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_POINT = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_CODE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_GENERIC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_PTR = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_PPOINT = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_INDEX = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_GRAPH_EDGE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_GRAPH_VERTEX = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_TRIAN_ATR = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_CONNECTED_COMP = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_ELTYPE CV_SEQ_ELTYPE_POINT3D = 56 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SEQ_KIND: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SEQ_KIND CV_SEQ_KIND_GENERIC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_KIND CV_SEQ_KIND_CURVE = 512 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_KIND CV_SEQ_KIND_BIN_TREE = 1024 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_KIND CV_SEQ_KIND_GRAPH = 1536 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_KIND CV_SEQ_KIND_SUBDIV2D = 2048 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SEQ_FLAG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SEQ_FLAG CV_SEQ_FLAG_CLOSED = 4096 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_FLAG CV_SEQ_FLAG_SIMPLE = 8192 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_FLAG CV_SEQ_FLAG_CONVEX = 16384 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_FLAG CV_SEQ_FLAG_HOLE = 32768 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SEQ_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SEQ_TYPE CV_SEQ_POINT_SET = 12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_TYPE CV_SEQ_POINT3D_SET = 56 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_TYPE CV_SEQ_POLYLINE = 524 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_TYPE CV_SEQ_POLYGON = 4620 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SEQ_TYPE CV_SEQ_SIMPLE_POLYGON = 12812 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.TERMCRIT: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.TERMCRIT CV_TERMCRIT_ITER = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TERMCRIT CV_TERMCRIT_EPS = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.THRESH: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.THRESH CV_THRESH_BINARY = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_BINARY_INV = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_TRUNC = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_TOZERO = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_TOZERO_INV = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_MASK = 7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.THRESH CV_THRESH_OTSU = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.TM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.TM_TYPE CV_TM_SQDIFF = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TM_TYPE CV_TM_SQDIFF_NORMED = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TM_TYPE CV_TM_CCORR = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TM_TYPE CV_TM_CCORR_NORMED = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TM_TYPE CV_TM_CCOEFF = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.TM_TYPE CV_TM_CCOEFF_NORMED = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.IPL_DEPTH: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_SIGN = 2147483648 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_1U = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_8U = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_16U = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_32F = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_8S = 2147483656 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_16S = 2147483664 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_32S = 2147483680 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.IPL_DEPTH IPL_DEPTH_64F = 64 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FLIP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FLIP NONE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FLIP HORIZONTAL = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FLIP VERTICAL = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CHECK_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CHECK_TYPE CHECK_NAN_INFINITY = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHECK_TYPE CHECK_RANGE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CHECK_TYPE CHECK_QUIET = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FLOODFILL_FLAG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FLOODFILL_FLAG DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FLOODFILL_FLAG FIXED_RANGE = 65536 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FLOODFILL_FLAG MASK_ONLY = 131072 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CONNECTIVITY: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CONNECTIVITY EIGHT_CONNECTED = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CONNECTIVITY FOUR_CONNECTED = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.LINE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.LINE_TYPE EIGHT_CONNECTED = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LINE_TYPE FOUR_CONNECTED = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LINE_TYPE CV_AA = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.DIST_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_USER = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_L1 = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_L2 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_C = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_L12 = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_FAIR = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_WELSCH = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.DIST_TYPE CV_DIST_HUBER = 7 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.MUL_SPECTRUMS_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.MUL_SPECTRUMS_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MUL_SPECTRUMS_TYPE CV_DXT_ROWS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.MUL_SPECTRUMS_TYPE CV_DXT_MUL_CONJ = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_DXT: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_DXT CV_DXT_FORWARD = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DXT CV_DXT_INVERSE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DXT CV_DXT_SCALE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DXT CV_DXT_ROWS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DXT CV_DXT_INV_SCALE = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_DCT_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_DCT_TYPE CV_DXT_FORWARD = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DCT_TYPE CV_DXT_INVERSE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_DCT_TYPE CV_DXT_ROWS = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_FM: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_FM CV_FM_7POINT = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_FM CV_FM_8POINT = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_FM CV_FM_LMEDS_ONLY = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_FM CV_FM_RANSAC_ONLY = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_FM CV_FM_LMEDS = 6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_FM CV_FM_RANSAC = 10 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.GENERAL: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.GENERAL CV_MAX_DIM = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GENERAL CV_SEQ_MAGIC_VAL = 1117323264 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GENERAL CV_SET_MAGIC_VAL = 1117257728 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ERROR_CODES: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ERROR_CODES CV_STSOK = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBACKTRACE = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSERROR = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSINTERNAL = -3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSNOMEM = -4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADARG = -5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADFUNC = -6 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSNOCONV = -7 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSAUTOTRACE = -8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_HEADERISNULL = -9 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADIMAGESIZE = -10 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADOFFSET = -11 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADDATAPTR = -12 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADSTEP = -13 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADMODELORCHSEQ = -14 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADNUMCHANNELS = -15 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADNUMCHANNEL1U = -16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADDEPTH = -17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADALPHACHANNEL = -18 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADORDER = -19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADORIGIN = -20 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADALIGN = -21 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADCALLBACK = -22 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADTILESIZE = -23 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADCOI = -24 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_BADROISIZE = -25 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_MASKISTILED = -26 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSNULLPTR = -27 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSVECLENGTHERR = -28 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSFILTERSTRUCTCONTENTERR = -29 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSKERNELSTRUCTCONTENTERR = -30 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSFILTEROFFSETERR = -31 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADSIZE = -201 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSDIVBYZERO = -202 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSINPLACENOTSUPPORTED = -203 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSOBJECTNOTFOUND = -204 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSUNMATCHEDFORMATS = -205 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADFLAG = -206 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADPOINT = -207 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADMASK = -208 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSUNMATCHEDSIZES = -209 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSUNSUPPORTEDFORMAT = -210 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSOUTOFRANGE = -211 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSPARSEERROR = -212 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSNOTIMPLEMENTED = -213 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ERROR_CODES CV_STSBADMEMBLOCK = -214 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.WARP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.WARP CV_WARP_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.WARP CV_WARP_FILL_OUTLIERS = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.WARP CV_WARP_INVERSE_MAP = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ADAPTIVE_THRESHOLD_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ADAPTIVE_THRESHOLD_TYPE CV_ADAPTIVE_THRESH_MEAN_C = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ADAPTIVE_THRESHOLD_TYPE CV_ADAPTIVE_THRESH_GAUSSIAN_C = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_ELEMENT_SHAPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_ELEMENT_SHAPE CV_SHAPE_RECT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_ELEMENT_SHAPE CV_SHAPE_CROSS = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_ELEMENT_SHAPE CV_SHAPE_ELLIPSE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_ELEMENT_SHAPE CV_SHAPE_CUSTOM = 100 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.PCA_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.PCA_TYPE CV_PCA_DATA_AS_ROW = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.PCA_TYPE CV_PCA_DATA_AS_COL = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.PCA_TYPE CV_PCA_USE_AVG = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_MORPH_OP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_MORPH_OP CV_MOP_OPEN = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_MORPH_OP CV_MOP_CLOSE = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_MORPH_OP CV_MOP_GRADIENT = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_MORPH_OP CV_MOP_TOPHAT = 5 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_MORPH_OP CV_MOP_BLACKHAT = 6 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HIST_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HIST_TYPE CV_HIST_ARRAY = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HIST_TYPE CV_HIST_SPARSE = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.INVERT_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.INVERT_METHOD CV_LU = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INVERT_METHOD CV_SVD = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.INVERT_METHOD CV_SVD_SYM = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.COVAR_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_SCRAMBLED = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_NORMAL = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_USE_AVG = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_SCALE = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_ROWS = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.COVAR_METHOD CV_COVAR_COLS = 16 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.SVD_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.SVD_TYPE CV_SVD_DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SVD_TYPE CV_SVD_MODIFY_A = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SVD_TYPE CV_SVD_U_T = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.SVD_TYPE CV_SVD_V_T = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.LKFLOW_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.LKFLOW_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LKFLOW_TYPE CV_LKFLOW_PYR_A_READY = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LKFLOW_TYPE CV_LKFLOW_PYR_B_READY = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.LKFLOW_TYPE CV_LKFLOW_INITIAL_GUESSES = 4 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CALIB_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CALIB_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_USE_INTRINSIC_GUESS = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_ASPECT_RATIO = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_PRINCIPAL_POINT = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_ZERO_TANGENT_DIST = 8 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_FOCAL_LENGTH = 16 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_K1 = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_K2 = 64 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_TYPE CV_CALIB_FIX_K3 = 128 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CALIB_CB_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CALIB_CB_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_CB_TYPE ADAPTIVE_THRESH = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_CB_TYPE NORMALIZE_IMAGE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_CB_TYPE FILTER_QUADS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CALIB_CB_TYPE FAST_CHECK = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.EIGOBJ_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.EIGOBJ_TYPE CV_EIGOBJ_NO_CALLBACK = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EIGOBJ_TYPE CV_EIGOBJ_INPUT_CALLBACK = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EIGOBJ_TYPE CV_EIGOBJ_OUTPUT_CALLBACK = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.EIGOBJ_TYPE CV_EIGOBJ_BOTH_CALLBACK = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_NEXT_AROUND_ORG = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_NEXT_AROUND_DST = 34 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_PREV_AROUND_ORG = 17 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_PREV_AROUND_DST = 51 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_NEXT_AROUND_LEFT = 19 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_NEXT_AROUND_RIGHT = 49 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_PREV_AROUND_LEFT = 32 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CV_NEXT_EDGE_TYPE CV_PREV_AROUND_RIGHT = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.ORIENTATION: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.ORIENTATION CV_CLOCKWISE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.ORIENTATION CV_COUNTER_CLOCKWISE = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.STEREO_BM_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.STEREO_BM_TYPE BASIC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STEREO_BM_TYPE FISH_EYE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STEREO_BM_TYPE NARROW = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.STEREO_BM_PREFILTER: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.STEREO_BM_PREFILTER NORMALIZED_RESPONSE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STEREO_BM_PREFILTER XSOBEL = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HOMOGRAPHY_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HOMOGRAPHY_METHOD DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HOMOGRAPHY_METHOD LMEDS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HOMOGRAPHY_METHOD RANSAC = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE CV_CONTOUR_MATCH_I1 = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE CV_CONTOURS_MATCH_I2 = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.CONTOURS_MATCH_TYPE CV_CONTOURS_MATCH_I3 = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.Subdiv2DPointLocationType: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.Subdiv2DPointLocationType ERROR = -2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType OUTSIDE_RECT = -1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType INSIDE = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType VERTEX = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.Subdiv2DPointLocationType ON_EDGE = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.STEREO_RECTIFY_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.STEREO_RECTIFY_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STEREO_RECTIFY_TYPE CALIB_ZERO_DISPARITY = 1024 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BORDER_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BORDER_TYPE CONSTANT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BORDER_TYPE REPLICATE = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HAAR_DETECTION_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HAAR_DETECTION_TYPE DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HAAR_DETECTION_TYPE DO_CANNY_PRUNING = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HAAR_DETECTION_TYPE SCALE_IMAGE = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HAAR_DETECTION_TYPE FIND_BIGGEST_OBJECT = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HAAR_DETECTION_TYPE DO_ROUGH_SEARCH = 8 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BACK_OR_FRONT: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BACK_OR_FRONT BACK = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BACK_OR_FRONT FRONT = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.MATCH_CONTOUR_TREE_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.MATCH_CONTOUR_TREE_METHOD CONTOUR_TREES_MATCH_I1 = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.STORAGE_OP: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.STORAGE_OP READ = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STORAGE_OP WRITE = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.STORAGE_OP APPEND = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BLOB_DETECTOR_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BLOB_DETECTOR_TYPE Simple = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOB_DETECTOR_TYPE CC = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BLOBTRACKER_MS_PROFILE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BLOBTRACKER_MS_PROFILE PROFILE_EPANECHNIKOV = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_MS_PROFILE PROFILE_DOG = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BLOBTRACKER_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE CC = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE CCMSPF = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE MSFG = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE MSFGS = 3 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE MS = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOBTRACKER_TYPE MSPF = 5 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE Kalman = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE TimeAverRect = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE TimeAverExp = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD CV_COMP_CORREL = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD CV_COMP_CHISQR = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD CV_COMP_INTERSECT = 2 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.HISTOGRAM_COMP_METHOD CV_COMP_BHATTACHARYYA = 3 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.BG_STAT_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.BG_STAT_TYPE FGD_STAT_MODEL = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.BG_STAT_TYPE GAUSSIAN_BG_MODEL = 1 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.FORGROUND_DETECTOR_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.FORGROUND_DETECTOR_TYPE FGD = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FORGROUND_DETECTOR_TYPE MOG = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.FORGROUND_DETECTOR_TYPE FGD_SIMPLE = 2 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.OPTICALFLOW_FARNEBACK_FLAG: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.OPTICALFLOW_FARNEBACK_FLAG DEFAULT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.OPTICALFLOW_FARNEBACK_FLAG USE_INITIAL_FLOW = 4 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.OPTICALFLOW_FARNEBACK_FLAG FARNEBACK_GAUSSIAN = 256 : Public, Static, Literal, HasDefault
Struct Emgu.CV.CvEnum.GRABCUT_INIT_TYPE: AutoLayout, AnsiClass, Class, Public, Sealed
  :System.Enum
  Fields:
    Int32 value__ : Public, SpecialName, RTSpecialName
    Emgu.CV.CvEnum.GRABCUT_INIT_TYPE INIT_WITH_RECT = 0 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GRABCUT_INIT_TYPE INIT_WITH_MASK = 1 : Public, Static, Literal, HasDefault
    Emgu.CV.CvEnum.GRABCUT_INIT_TYPE EVAL = 2 : Public, Static, Literal, HasDefault
Class Emgu.CV.CvInvoke: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Fields:
    CvErrorCallback CvErrorHandlerThrowException : Public, Static, InitOnly
    CvErrorCallback CvErrorHandlerIgnoreError : Public, Static, InitOnly
    System.String CXCORE_LIBRARY = cxcore210 : Public, Static, Literal, HasDefault
    System.String CV_LIBRARY = cv210 : Public, Static, Literal, HasDefault
    System.String HIGHGUI_LIBRARY = highgui210 : Public, Static, Literal, HasDefault
    System.String CVAUX_LIBRARY = cvaux210 : Public, Static, Literal, HasDefault
    System.String EXTERN_LIBRARY = cvextern : Public, Static, Literal, HasDefault
  Methods:
    cvKMeans2(IntPtr, Int32, IntPtr, MCvTermCriteria, Int32, IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateCameraCapture(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateFileCapture(String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseCapture(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvQueryFrame(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetCaptureProperty(IntPtr, CAP_PROP): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetCaptureProperty(IntPtr, CAP_PROP, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLoadImage(String(HasFieldMarshal), LOAD_IMAGE_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSaveImage(String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvNamedWindow(String): PrivateScope, Public, Static, HideBySig
    cvWaitKey(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvShowImage(String(HasFieldMarshal), IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDestroyWindow(String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateVideoWriter(String(HasFieldMarshal), Int32, Double, Size, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateVideoWriter(String, Int32, Double, Size, Boolean): PrivateScope, Public, Static, HideBySig
    cvReleaseVideoWriter(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvWriteFrame(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvTrace(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvTranspose(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDet(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInvert(IntPtr, IntPtr, INVERT_METHOD): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSVD(IntPtr, IntPtr, IntPtr, IntPtr, SVD_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcCovarMatrix(IntPtr[], Int32, IntPtr, IntPtr, COVAR_METHOD): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMahalanobis(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcPCA(IntPtr, IntPtr, IntPtr, IntPtr, PCA_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvProjectPCA(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetRawData(IntPtr, IntPtr&(Out), Int32&(Out), Size&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetMat(IntPtr, IntPtr, Int32&(Out), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetImage(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCheckArr(IntPtr, CHECK_TYPE, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetNumThreads(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetNumThreads(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetThreadNum(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCmp(IntPtr, IntPtr, IntPtr, CMP_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCmpS(IntPtr, Double, IntPtr, CMP_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvErrorStr(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvOpenFileStorage(String(HasFieldMarshal), IntPtr, STORAGE_OP): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseFileStorage(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReadByName(IntPtr, IntPtr, String): PrivateScope, Public, Static, HideBySig
    cvRead(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetFileNodeByName(IntPtr, IntPtr, String(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitFont(MCvFont&, FONT, Double, Double, Double, Int32, LINE_TYPE(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPutText(IntPtr, String(HasFieldMarshal), Point, MCvFont&, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetTextSize(String(HasFieldMarshal), MCvFont&, Size&, Int32&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCvtSeqToArray(IntPtr, IntPtr, MCvSlice): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMakeSeqHeaderForArray(Int32, Int32, Int32, IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMinMaxLoc(IntPtr, Double&, Double&, Point&, Point&, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGet1D(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGet2D(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGet3D(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetReal1D(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetReal2D(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetReal3D(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvQueryHistValue_1D(IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvQueryHistValue_2D(IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig
    cvQueryHistValue_3D(IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig
    cvUseOptimized(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvUseOptimized(Boolean): PrivateScope, Public, Static, HideBySig
    cvRandArr(UInt64&, IntPtr, RAND_TYPE, MCvScalar, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDotProduct(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvEigenVV(IntPtr, IntPtr, IntPtr, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvNormalize(IntPtr, IntPtr, Double, Double, NORM_TYPE, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCrossProduct(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGEMM(IntPtr, IntPtr, Double, IntPtr, Double, IntPtr, GEMM_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvTransform(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPerspectiveTransform(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMulTransposed(IntPtr, IntPtr, Int32, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPolyLine(IntPtr, IntPtr[](In), Int32[](In), Int32, Int32, MCvScalar, Int32, LINE_TYPE(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPolyLine(IntPtr, IntPtr[](In), Int32[](In), Int32, Boolean, MCvScalar, Int32, LINE_TYPE, Int32): PrivateScope, Public, Static, HideBySig
    cvRectangle(IntPtr, Point, Point, MCvScalar, Int32, LINE_TYPE(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetSubRect(IntPtr, IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetRows(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetRow(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvGetCols(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetCol(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig
    cvGetDiag(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetSize(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCircle(IntPtr, Point, Int32, MCvScalar, Int32, LINE_TYPE(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSplit(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCvtPixToPlane(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    cvEllipse(IntPtr, Point, Size, Double, Double, Double, MCvScalar, Int32, LINE_TYPE, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvEllipseBox(IntPtr, MCvBox2D, MCvScalar, Int32, LINE_TYPE, Int32): PrivateScope, Public, Static, HideBySig
    cvLUT(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConvertScale(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCvtScale(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConvert(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    cvConvertScaleAbs(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAvg(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAvgSdv(IntPtr, MCvScalar&, MCvScalar&, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSum(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReduce(IntPtr, IntPtr, REDUCE_DIMENSION, REDUCE_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseImage(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDrawContours(IntPtr, IntPtr, MCvScalar, MCvScalar, Int32, Int32, LINE_TYPE(HasFieldMarshal), Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFillConvexPoly(IntPtr, Point[](In), Int32, MCvScalar, LINE_TYPE(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvResetImageROI(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetImageROI(IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetImageROI(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateMat(Int32, Int32, MAT_DEPTH): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMat(Int32, Int32, MAT_DEPTH, IntPtr): PrivateScope, Public, Static, HideBySig
    cvInitMatNDHeader(IntPtr, Int32, Int32[](In), MAT_DEPTH, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseMat(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSparseMat(Int32, IntPtr, MAT_DEPTH): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseSparseMat(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateMemStorage(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateChildMemStorage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvClearMemStorage(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseMemStorage(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLoad(String, IntPtr, String, IntPtr): PrivateScope, Public, Static, HideBySig
    cvSeqSlice(IntPtr, MCvSlice, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqSlice(IntPtr, MCvSlice, IntPtr, Boolean): PrivateScope, Public, Static, HideBySig
    cvSetReal1D(IntPtr, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetReal2D(IntPtr, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetReal3D(IntPtr, Int32, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetRealND(IntPtr, Int32[](In), Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvClearND(IntPtr, Int32[](In)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSet2D(IntPtr, Int32, Int32, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFlip(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLine(IntPtr, Point, Point, MCvScalar, Int32, LINE_TYPE(HasFieldMarshal), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLog(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSolveCubic(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSolvePoly(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDFT(IntPtr, IntPtr, CV_DXT, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetOptimalDFTSize(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMulSpectrums(IntPtr, IntPtr, IntPtr, MUL_SPECTRUMS_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDCT(IntPtr, IntPtr, CV_DCT_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvClipLine(Size, Point&, Point&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAbsDiff(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAbsDiffS(IntPtr, IntPtr, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAddWeighted(IntPtr, Double, IntPtr, Double, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInRangeS(IntPtr, MCvScalar, MCvScalar, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInRange(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvNorm(IntPtr, IntPtr, NORM_TYPE, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateImage(Size, IPL_DEPTH, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateImageHeader(Size, IPL_DEPTH, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitImageHeader(IntPtr, Size, IPL_DEPTH, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetData(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseImageHeader(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitMatHeader(IntPtr, Int32, Int32, MAT_DEPTH, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitMatHeader(IntPtr, Int32, Int32, Int32, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetImageCOI(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetImageCOI(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMinS(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAdd(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAddS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSub(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSubS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    cvSubRS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDiv(IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMul(IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAnd(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAndS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvOr(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvOrS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvXor(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvXorS(IntPtr, MCvScalar, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCopy(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSet(IntPtr, MCvScalar, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetZero(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvZero(IntPtr): PrivateScope, Public, Static, HideBySig
    cvSetIdentity(IntPtr, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRange(IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCartToPolar(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCartToPolar(IntPtr, IntPtr, IntPtr, IntPtr, Boolean): PrivateScope, Public, Static, HideBySig
    cvPolarToCart(IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPolarToCart(IntPtr, IntPtr, IntPtr, IntPtr, Boolean): PrivateScope, Public, Static, HideBySig
    cvPow(IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvExp(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPushFront(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPop(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPopFront(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqRemove(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqInsert(IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPushMulti(IntPtr, IntPtr, Int32, BACK_OR_FRONT): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPopMulti(IntPtr, IntPtr, Int32, BACK_OR_FRONT): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvChangeSeqBlock(MCvSeqReader&, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CV_NEXT_SEQ_ELEM(Int32, MCvSeqReader&): PrivateScope, Public, Static, HideBySig
    CV_READ_SEQ_ELEM(MCvSeqReader&): PrivateScope, Public, Static, HideBySig
    CV_IS_SET_ELEM(IntPtr): PrivateScope, Public, Static, HideBySig
    cvStartReadSeq(IntPtr, MCvSeqReader&, Boolean): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetSeqElem(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvClearSeq(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReshape(IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRepeat(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMerge(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMixChannels(IntPtr[], Int32, IntPtr[], Int32, Int32[], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMixChannels(IntPtr[], IntPtr[], Int32[]): PrivateScope, Public, Static, HideBySig
    cvRandShuffle(IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCvtPlaneToPix(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvNot(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMax(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMaxS(IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCountNonZero(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMin(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateModuleBlobTrackPostProcTimeAverRect(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateModuleBlobTrackPostProcTimeAverExp(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackPostProcRelease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerAuto1(MCvBlobTrackerAutoParam1&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoRelease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoGetBlob(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoGetBlobByID(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoGetBlobNum(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoProcess(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAutoGetFGMask(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvFASTKeyPoints(IntPtr, IntPtr, Int32, Boolean(HasFieldMarshal)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvGrabCut(IntPtr, IntPtr, Rectangle&, IntPtr, IntPtr, Int32, GRABCUT_INIT_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetModuleInfo(IntPtr, IntPtr&, IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetMemoryManager(CvAllocFunc, CvFreeFunc, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRedirectError(CvErrorCallback, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRedirectError(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetErrMode(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetErrMode(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetErrStatus(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSetErrStatus(ERROR_CODES): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSeq(Int32, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSeqPush(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvFGDetectorRelease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobSeqCreate(Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobSeqRelease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobSeqGetBlob(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobSeqGetBlobByID(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobSeqGetBlobNum(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobDetectorRelease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobDetectorDetectNewBlob(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobDetectorSimple(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobDetectorCC(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerCC(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerCCMSPF(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerMSFG(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerMSFGS(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerMS(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateBlobTrackerMSPF(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerRealease(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerGetBlobNum(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerGetBlob(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerGetBlobByID(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerDelBlob(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvBlobTrackerAddBlob(IntPtr, MCvBlob&, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateModuleBlobTrackPostProcKalman(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvEigenDecomposite(IntPtr, IntPtr[], IntPtr): PrivateScope, Public, Static, HideBySig
    cvCalcEigenObjects(IntPtr[], MCvTermCriteria&, IntPtr[], Single[], IntPtr): PrivateScope, Public, Static, HideBySig
    cvEigenProjection(IntPtr[], Single[], IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig
    cvCreateGaussianBGModel(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateFGDStatModel(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateFGDStatModel(IntPtr, MCvFGDStatModelParams&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindStereoCorrespondence(IntPtr, IntPtr, Int32, IntPtr, Int32, Double, Double, Double, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateConDensation(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseConDensation(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConDensInitSampleSet(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConDensUpdateByTime(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcPGH(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    icvSubdiv2DCheck(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateBGCodeBookModel(): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBGCodeBookUpdate(IntPtr, IntPtr, Rectangle, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBGCodeBookDiff(IntPtr, IntPtr, IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBGCodeBookClearStale(IntPtr, Int32, Rectangle, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseBGCodeBookModel(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateFGDetectorBase(FORGROUND_DETECTOR_TYPE, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvFGDetectorGetMask(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvFGDetectorProcess(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CvCreateFGDetectorBase(FORGROUND_DETECTOR_TYPE, MCvFGDStatModelParams&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetNormalizedCentralMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAcc(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSquareAcc(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMultiplyAcc(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRunningAvg(IntPtr, IntPtr, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRodrigues2(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetHuMoments(MCvMoments&, MCvHuMoments&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateKalman(Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvKalmanCorrect(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvKalmanCorrect(MCvKalman&, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvKalmanPredict(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvKalmanPredict(MCvKalman&, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseKalman(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvUpdateMotionHistory(IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcMotionGradient(IntPtr, IntPtr, IntPtr, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCornerHarris(IntPtr, IntPtr, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindCornerSubPix(IntPtr, Single[,], Int32, Size, Size, MCvTermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindCornerSubPix(IntPtr, PointF[](In, Out), Int32, Size, Size, MCvTermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvIntegral(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDistTransform(IntPtr, IntPtr, DIST_TYPE, Int32, Single[], IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFloodFill(IntPtr, Point, MCvScalar, MCvScalar, MCvScalar, MCvConnectedComp&(Out), Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFloodFill(IntPtr, Point, MCvScalar, MCvScalar, MCvScalar, MCvConnectedComp&(Out), CONNECTIVITY, FLOODFILL_FLAG, IntPtr): PrivateScope, Public, Static, HideBySig
    cvCalcEMD2(IntPtr, IntPtr, DIST_TYPE, CvDistanceFunction, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetStarKeypoints(IntPtr, IntPtr, StarDetector): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetMinMaxHistValue(IntPtr, Single&, Single&, Int32[], Int32[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvNormalizeHist(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvThreshHist(IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvClearHist(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMakeHistHeaderForArray(Int32, Int32[](In), IntPtr, IntPtr, IntPtr[](In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateHist(Int32, Int32[](In), HIST_TYPE, IntPtr[](In), Boolean): PrivateScope, Public, Static, HideBySig
    cvCalcArrHist(IntPtr[], IntPtr, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcArrHist(IntPtr[], IntPtr, Boolean, IntPtr): PrivateScope, Public, Static, HideBySig
    cvCopyHist(IntPtr, IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCompareHist(IntPtr, IntPtr, HISTOGRAM_COMP_METHOD): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcHist(IntPtr[], IntPtr, Boolean, IntPtr): PrivateScope, Public, Static, HideBySig
    cvCalcArrBackProject(IntPtr[], IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvEqualizeHist(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcBackProject(IntPtr[], IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcBackProjectPatch(IntPtr[], IntPtr, Size, IntPtr, HISTOGRAM_COMP_METHOD, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcProbDensity(IntPtr, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseHist(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowLK(IntPtr, IntPtr, Size, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowHS(IntPtr, IntPtr, Int32, IntPtr, IntPtr, Double, MCvTermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowBM(IntPtr, IntPtr, Size, Size, Size, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowPyrLK(IntPtr, IntPtr, IntPtr, IntPtr, Single[,], Single[,], Int32, Size, Int32, Byte[], Single[], MCvTermCriteria, LKFLOW_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowPyrLK(IntPtr, IntPtr, IntPtr, IntPtr, PointF[](In), PointF[](Out), Int32, Size, Int32, Byte[], Single[], MCvTermCriteria, LKFLOW_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcOpticalFlowFarneback(IntPtr, IntPtr, IntPtr, Double, Int32, Int32, Int32, Int32, Double, OPTICALFLOW_FARNEBACK_FLAG): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetSpatialMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetCentralMoment(MCvMoments&, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDrawChessboardCorners(IntPtr, Size, PointF[](In), Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindFundamentalMat(IntPtr, IntPtr, IntPtr, CV_FM, Double, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvComputeCorrespondEpilines(IntPtr, Int32, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConvertPointsHomogeneous(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateStereoBMState(STEREO_BM_TYPE, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseStereoBMState(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindStereoCorrespondenceBM(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindStereoCorrespondenceBM(IntPtr, IntPtr, IntPtr, MCvStereoBMState&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateStereoGCState(Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseStereoGCState(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindStereoCorrespondenceGC(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindStereoCorrespondenceGC(IntPtr, IntPtr, IntPtr, IntPtr, MCvStereoGCState&, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReprojectImageTo3D(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMeanShift(IntPtr, Rectangle, MCvTermCriteria, MCvConnectedComp&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCamShift(IntPtr, Rectangle, MCvTermCriteria, MCvConnectedComp&(Out), MCvBox2D&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMatchTemplate(IntPtr, IntPtr, IntPtr, TM_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMatchShapes(IntPtr, IntPtr, CONTOURS_MATCH_TYPE, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSnakeImage(IntPtr, IntPtr, Int32, Single[](HasFieldMarshal), Single[](HasFieldMarshal), Single[](HasFieldMarshal), Int32, Size, MCvTermCriteria, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSnakeImage(IntPtr, Point[](In, Out), Int32, Single[](HasFieldMarshal), Single[](HasFieldMarshal), Single[](HasFieldMarshal), Int32, Size, MCvTermCriteria, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSnakeImage(IntPtr, IntPtr, Int32, Single[], Single[], Single[], Int32, Size, MCvTermCriteria, Boolean): PrivateScope, Public, Static, HideBySig
    cvCreateStructuringElementEx(Int32, Int32, Int32, Int32, CV_ELEMENT_SHAPE, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseStructuringElement(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMorphologyEx(IntPtr, IntPtr, IntPtr, IntPtr, CV_MORPH_OP, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateHist(Int32, Int32[](In), HIST_TYPE, IntPtr[](In), Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvHoughCircles(IntPtr, IntPtr, HOUGH_TYPE, Double, Double, Double, Double, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCvtColor(IntPtr, IntPtr, COLOR_CONVERSION): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvHoughLines2(IntPtr, IntPtr, HOUGH_TYPE, Double, Double, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMoments(IntPtr, MCvMoments&, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGoodFeaturesToTrack(IntPtr, IntPtr, IntPtr, IntPtr, Int32&, Double, Double, IntPtr, Int32, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvExtractSURF(IntPtr, IntPtr, IntPtr&, IntPtr&, IntPtr, MCvSURFParams, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSURFParams(Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvExtractMSER(IntPtr, IntPtr, IntPtr&, IntPtr, MCvMSERParams): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvProjectPoints2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindHomography(IntPtr, IntPtr, IntPtr, HOMOGRAPHY_METHOD, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalibrateCamera2(IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, CALIB_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalibrationMatrixValues(IntPtr, Int32, Int32, Double, Double, Double&, Double&, Double&, MCvPoint2D64f&, Double&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindExtrinsicCameraParams2(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvStereoCalibrate(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, MCvTermCriteria, CALIB_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvStereoRectifyUncalibrated(IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvStereoRectify(IntPtr, IntPtr, IntPtr, IntPtr, Size, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, STEREO_RECTIFY_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvUndistort2(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitUndistortMap(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInitUndistortRectifyMap(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvUndistortPoints(IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindChessboardCorners(IntPtr, Size, Single[,], Int32&, CALIB_CB_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl (Obsolete)
    cvFindChessboardCorners(IntPtr, Size, IntPtr, Int32&, CALIB_CB_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDrawChessboardCorners(IntPtr, Size, Single[,], Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSmooth(IntPtr, IntPtr, SMOOTH_TYPE, Int32, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSobel(IntPtr, IntPtr, Int32, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLaplace(IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCanny(IntPtr, IntPtr, Double, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCheckContourConvexity(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPointPolygonTest(IntPtr, PointF, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConvexityDefects(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPointPolygonTest(IntPtr, PointF, Boolean): PrivateScope, Public, Static, HideBySig
    cvMinAreaRect2(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMinEnclosingCircle(IntPtr, PointF&(Out), Single&(Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvApproxPoly(IntPtr, Int32, IntPtr, APPROX_POLY_TYPE, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBoundingRect(IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBoundingRect(IntPtr, Boolean): PrivateScope, Public, Static, HideBySig
    cvContourArea(IntPtr, MCvSlice, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvArcLength(IntPtr, MCvSlice, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvContourPerimeter(IntPtr): PrivateScope, Public, Static, HideBySig
    cvCreateContourTree(IntPtr, IntPtr, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvContourFromContourTree(IntPtr, IntPtr, MCvTermCriteria): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMatchContourTrees(IntPtr, IntPtr, MATCH_CONTOUR_TREE_METHOD, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFilter2D(IntPtr, IntPtr, IntPtr, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCopyMakeBorder(IntPtr, IntPtr, Point, BORDER_TYPE, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvThreshold(IntPtr, IntPtr, Double, Double, THRESH): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvAdaptiveThreshold(IntPtr, IntPtr, Double, ADAPTIVE_THRESHOLD_TYPE, THRESH, Int32, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvHaarDetectObjects(IntPtr, IntPtr, IntPtr, Double, Int32, HAAR_DETECTION_TYPE, Size): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindContours(IntPtr, IntPtr, IntPtr&, Int32, RETR_TYPE, CHAIN_APPROX_METHOD, Point): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBoxPoints(MCvBox2D, Single[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvBoxPoints(MCvBox2D, PointF[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFitEllipse2(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvConvexHull2(IntPtr, IntPtr, ORIENTATION, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSubdivDelaunay2D(Rectangle, IntPtr): PrivateScope, Public, Static, HideBySig
    cvInitSubdivDelaunay2D(IntPtr, Rectangle): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindNearestPoint2D(IntPtr, PointF): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSubdiv2D(Int32, Int32, Int32, Int32, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSubdivDelaunay2DInsert(IntPtr, PointF): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSubdiv2DLocate(IntPtr, PointF, IntPtr&(Out), IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcSubdivVoronoi2D(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreatePOSITObject(Single[,], Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPOSIT(IntPtr, Single[,], Double, MCvTermCriteria, Single[], Single[]): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPOSIT(IntPtr, IntPtr, Double, MCvTermCriteria, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleasePOSITObject(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateKDTree(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCreateSpillTree(IntPtr, Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseFeatureTree(IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindFeatures(IntPtr, IntPtr, IntPtr, IntPtr, Int32, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFindFeaturesBoxed(IntPtr, IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvErode(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvDilate(IntPtr, IntPtr, IntPtr, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvReleaseHaarClassifierCascade(IntPtr&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvInpaint(IntPtr, IntPtr, IntPtr, Double, INPAINT_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    CV_MAKETYPE(Int32, Int32): PrivateScope, Public, Static, HideBySig
    CV_FOURCC(Char, Char, Char, Char): PrivateScope, Public, Static, HideBySig
    cvSampleLine(IntPtr, Point, Point, IntPtr, CONNECTIVITY): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetRectSubPix(IntPtr, IntPtr, PointF): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetQuadrangleSubPix(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvResize(IntPtr, IntPtr, INTER): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvWarpAffine(IntPtr, IntPtr, IntPtr, Int32, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetAffineTransform(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetAffineTransform(PointF[], PointF[], IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cv2DRotationMatrix(PointF, Double, Double, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvWarpPerspective(IntPtr, IntPtr, IntPtr, Int32, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetPerspectiveTransform(PointF[], PointF[], IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvGetPerspectiveTransform(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvRemap(IntPtr, IntPtr, IntPtr, IntPtr, Int32, MCvScalar): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLogPolar(IntPtr, IntPtr, PointF, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvLinearPolar(IntPtr, IntPtr, PointF, Double, Int32): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvSegmentMotion(IntPtr, IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvCalcGlobalOrientation(IntPtr, IntPtr, IntPtr, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPyrDown(IntPtr, IntPtr, FILTER_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPyrUp(IntPtr, IntPtr, FILTER_TYPE): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvPyrSegmentation(IntPtr, IntPtr, IntPtr, IntPtr&(Out), Int32, Double, Double): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvWatershed(IntPtr, IntPtr): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvMaxRect(Rectangle&, Rectangle&): PrivateScope, Public, Static, HideBySig, PinvokeImpl
    cvFitLine(IntPtr, DIST_TYPE, Double, Double, Double, Single[](Out)): PrivateScope, Public, Static, HideBySig, PinvokeImpl
Class Emgu.CV.CvInvoke+CvDistanceFunction: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.CvInvoke+CvAllocFunc: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(UInt32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(UInt32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.CvInvoke+CvFreeFunc: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(IntPtr, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(IntPtr, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.CvInvoke+CvErrorCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Invoke(Int32, String, String, String, Int32, IntPtr): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    BeginInvoke(Int32, String, String, String, Int32, IntPtr, AsyncCallback, Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.Cuboid: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Emgu.CV.Structure.MCvPoint3D64f Min : Public
    Emgu.CV.Structure.MCvPoint3D64f Max : Public
  Properties:
    Emgu.CV.Structure.MCvPoint3D64f Centroid 'get ' : 
  Methods:
    Contains(MCvPoint3D64f): PrivateScope, Public, HideBySig
    get_Centroid(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvAvgComp: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Rectangle rect : Public
    Int32 neighbors : Public
Class Emgu.CV.Structure.MCvBGCodeBookModel: AutoLayout, AnsiClass, Class, Public, SequentialLayout, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Drawing.Size size : Public
    Int32 t : Public
    Byte[] cbBounds : Public, HasFieldMarshal
    Byte[] modMin : Public, HasFieldMarshal
    Byte[] modMax : Public, HasFieldMarshal
    IntPtr cbmap : Public
    IntPtr storage : Public
    IntPtr freeList : Public
Struct Emgu.CV.Structure.MCvBGStatModel: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 type : Public
    IntPtr CvReleaseBGStatModel : Public
    IntPtr CvUpdateBGStatModel : Public
    IntPtr background : Public
    IntPtr foreground : Public
    IntPtr layers : Public
    Int32 layer_count : Public
    IntPtr storage : Public
    IntPtr foreground_regions : Public
Struct Emgu.CV.Structure.MCvBlob: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.PointF Center : Public
    System.Drawing.SizeF Size : Public
    Int32 ID : Public
  Methods:
    op_Implicit(MCvBlob): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvBlobTrackerAutoParam1: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 FGTrainFrames : Public
    IntPtr FG : Public
    IntPtr BD : Public
    IntPtr BT : Public
    IntPtr BTGen : Public
    IntPtr BTPP : Public
    Int32 usePPData : Public
    IntPtr BTA : Public
Struct Emgu.CV.Structure.MCvBlobTrackerParamLH: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 HistType : Public
    Int32 ScaleAfter : Public
Struct Emgu.CV.Structure.MCvBlobTrackerParamMS: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 noOfSigBits : Public
    Int32 appearance_profile : Public
    Emgu.CV.CvEnum.BLOBTRACKER_MS_PROFILE meanshift_profile : Public
    Single sigma : Public
Interface Emgu.CV.IConvexPolygonF: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Emgu.CV.Structure.MCvBox2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.SizeF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IConvexPolygonF
    System.IEquatable`1[Emgu.CV.Structure.MCvBox2D]
  Fields:
    System.Drawing.PointF center : Public
    System.Drawing.SizeF size : Public
    Single angle : Public
  Properties:
    Emgu.CV.Structure.MCvBox2D Empty 'get ' : 
  Methods:
    Offset(Int32, Int32): PrivateScope, Public, HideBySig
    get_Empty(): PrivateScope, Public, Static, HideBySig, SpecialName
    GetVertices(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    MinAreaRect(): PrivateScope, Public, HideBySig
    Equals(MCvBox2D): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    op_Implicit(RectangleF): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvChain: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Int32 header_size : Public
    IntPtr h_prev : Public
    IntPtr h_next : Public
    IntPtr v_prev : Public
    IntPtr v_next : Public
    Int32 total : Public
    Int32 elem_size : Public
    IntPtr block_max : Public
    IntPtr ptr : Public
    Int32 delta_elems : Public
    IntPtr storage : Public
    IntPtr free_blocks : Public
    IntPtr first : Public
    System.Drawing.Point origin : Public
Struct Emgu.CV.Structure.MCvConDensation: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 MP : Public
    Int32 DP : Public
    IntPtr DynamMatr : Public
    IntPtr State : Public
    Int32 SamplesNum : Public
    IntPtr flSamples : Public
    IntPtr flNewSamples : Public
    IntPtr flConfidence : Public
    IntPtr flCumulative : Public
    IntPtr Temp : Public
    IntPtr RandomSample : Public
    IntPtr RandS : Public
Struct Emgu.CV.Structure.MCvConnectedComp: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double area : Public
    Emgu.CV.Structure.MCvScalar value : Public
    System.Drawing.Rectangle rect : Public
    IntPtr contour : Public
Struct Emgu.CV.Structure.MCvContour: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Int32 header_size : Public
    IntPtr h_prev : Public
    IntPtr h_next : Public
    IntPtr v_prev : Public
    IntPtr v_next : Public
    Int32 total : Public
    Int32 elem_size : Public
    IntPtr block_max : Public
    IntPtr ptr : Public
    Int32 delta_elems : Public
    IntPtr storage : Public
    IntPtr free_blocks : Public
    IntPtr first : Public
    System.Drawing.Rectangle rect : Public
    Int32 color : Public
    Int32[] reserved : Public, HasFieldMarshal
Struct Emgu.CV.Structure.MCvConvexityDefect: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr StartPointPointer : Public
    IntPtr EndPointPointer : Public
    IntPtr DepthPointPointer : Public
    Single Depth : Public
  Properties:
    System.Drawing.Point StartPoint 'get ' : 
    System.Drawing.Point EndPoint 'get ' : 
    System.Drawing.Point DepthPoint 'get ' : 
  Methods:
    get_StartPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_EndPoint(): PrivateScope, Public, HideBySig, SpecialName
    get_DepthPoint(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvFGDStatModelParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Lc : Public
    Int32 N1c : Public
    Int32 N2c : Public
    Int32 Lcc : Public
    Int32 N1cc : Public
    Int32 N2cc : Public
    Int32 is_obj_without_holes : Public
    Int32 perform_morphing : Public
    Single alpha1 : Public
    Single alpha2 : Public
    Single alpha3 : Public
    Single delta : Public
    Single T : Public
    Single minArea : Public
Struct Emgu.CV.Structure.MCvFont: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.CvEnum.FONT, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.CvEnum.FONT font_face : Public
    IntPtr ascii : Public
    IntPtr greek : Public
    IntPtr cyrillic : Public
    Single hscale : Public
    Single vscale : Public
    Single shear : Public
    Int32 thickness : Public
    Single dx : Public
    Int32 line_type : Public
  Methods:
    GetTextSize(String, Int32): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvHistogram: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 type : Public
    IntPtr bins : Public
    Emgu.CV.Structure.RangeF[] thresh : Public, HasFieldMarshal
    IntPtr thresh2 : Public
    Emgu.CV.Structure.MCvMatND mat : Public
Struct Emgu.CV.Structure.MCvHuMoments: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double hu1 : Public
    Double hu2 : Public
    Double hu3 : Public
    Double hu4 : Public
    Double hu5 : Public
    Double hu6 : Public
    Double hu7 : Public
Struct Emgu.CV.Structure.MCvKalman: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 MP : Public
    Int32 DP : Public
    Int32 CP : Public
    IntPtr PosterState : Public
    IntPtr PriorState : Public
    IntPtr DynamMatr : Public
    IntPtr MeasurementMatr : Public
    IntPtr MNCovariance : Public
    IntPtr PNCovariance : Public
    IntPtr KalmGainMatr : Public
    IntPtr PriorErrorCovariance : Public
    IntPtr PosterErrorCovariance : Public
    IntPtr Temp1 : Public
    IntPtr Temp2 : Public
    IntPtr state_pre : Public
    IntPtr state_post : Public
    IntPtr transition_matrix : Public
    IntPtr control_matrix : Public
    IntPtr measurement_matrix : Public
    IntPtr process_noise_cov : Public
    IntPtr measurement_noise_cov : Public
    IntPtr error_cov_pre : Public
    IntPtr gain : Public
    IntPtr error_cov_post : Public
    IntPtr temp1 : Public
    IntPtr temp2 : Public
    IntPtr temp3 : Public
    IntPtr temp4 : Public
    IntPtr temp5 : Public
Struct Emgu.CV.Structure.MCvMat: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 type : Public
    Int32 step : Public
    IntPtr refcount : Public
    Int32 hdr_refcount : Public
    IntPtr data : Public
    Int32 rows : Public
    Int32 cols : Public
  Properties:
    Int32 width 'get ' : 
    Int32 height 'get ' : 
    Int32 NumberOfChannels 'get ' : 
  Methods:
    get_width(): PrivateScope, Public, HideBySig, SpecialName
    get_height(): PrivateScope, Public, HideBySig, SpecialName
    get_NumberOfChannels(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvMatND: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 type : Public
    Int32 dims : Public
    IntPtr refcount : Public
    Int32 hdr_refcount : Public
    IntPtr data : Public
    Dimension[] dim : Public, HasFieldMarshal
Struct Emgu.CV.Structure.MCvMatND+Dimension: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Properties:
    Int32 Size 'get set' : 
    Int32 Step 'get set' : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_Step(): PrivateScope, Public, HideBySig, SpecialName
    set_Step(Int32): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvMoments: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Double m00 : Public
    Double m10 : Public
    Double m01 : Public
    Double m20 : Public
    Double m11 : Public
    Double m02 : Public
    Double m30 : Public
    Double m21 : Public
    Double m12 : Public
    Double m03 : Public
    Double mu20 : Public
    Double mu11 : Public
    Double mu02 : Public
    Double mu30 : Public
    Double mu21 : Public
    Double mu12 : Public
    Double mu03 : Public
    Double inv_sqrt_m00 : Public
  Properties:
    Emgu.CV.Structure.MCvPoint2D64f GravityCenter 'get ' : 
  Methods:
    get_GravityCenter(): PrivateScope, Public, HideBySig, SpecialName
    GetSpatialMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetCentralMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetNormalizedCentralMoment(Int32, Int32): PrivateScope, Public, HideBySig
    GetHuMoment(): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvMSERParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 delta : Public
    Int32 maxArea : Public
    Int32 minArea : Public
    Single maxVariation : Public
    Single minDiversity : Public
    Int32 maxEvolution : Public
    Double areaThreshold : Public
    Double minMargin : Public
    Int32 edgeBlurSize : Public
  Methods:
    GetDefaultParameter(): PrivateScope, Public, Static, HideBySig
Struct Emgu.CV.Structure.MCvPoint2D64f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint2D64f]
    Emgu.Util.IInterpolatable`1[Emgu.CV.Structure.MCvPoint2D64f]
  Fields:
    Double x : Public
    Double y : Public
  Methods:
    op_Addition(MCvPoint2D64f, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MCvPoint2D64f, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint2D64f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, MCvPoint2D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint2D64f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvPoint3D32f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint3D32f]
  Fields:
    Single x : Public
    Single y : Public
    Single z : Public
  Properties:
    Double Norm 'get ' : 
  Methods:
    CrossProduct(MCvPoint3D32f): PrivateScope, Public, HideBySig
    DotProduct(MCvPoint3D32f): PrivateScope, Public, HideBySig
    get_Norm(): PrivateScope, Public, HideBySig, SpecialName
    GetNormalizedPoint(): PrivateScope, Public, HideBySig
    op_Subtraction(MCvPoint3D32f, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Addition(MCvPoint3D32f, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint3D32f, Single): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Single, MCvPoint3D32f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint3D32f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvPoint3D64f: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.MCvPoint3D64f]
  Fields:
    Double x : Public
    Double y : Public
    Double z : Public
  Methods:
    CrossProduct(MCvPoint3D64f): PrivateScope, Public, HideBySig
    DotProduct(MCvPoint3D64f): PrivateScope, Public, HideBySig
    op_Addition(MCvPoint3D64f, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(MCvPoint3D64f, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(MCvPoint3D64f, Double): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Multiply(Double, MCvPoint3D64f): PrivateScope, Public, Static, HideBySig, SpecialName
    Equals(MCvPoint3D64f): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvQuadEdge2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    IntPtr[] pt : Public, HasFieldMarshal
    Emgu.CV.Structure.MCvSubdiv2DEdge[] next : Public, HasFieldMarshal
  Methods:
    GetCvSubdiv2DPoint(Int32): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvScalar: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double, Double, Double, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.Util.ICodeGenerable
    System.IEquatable`1[Emgu.CV.Structure.MCvScalar]
  Fields:
    Double v0 : Public
    Double v1 : Public
    Double v2 : Public
    Double v3 : Public
  Methods:
    ToArray(): PrivateScope, Public, HideBySig
    ToCode(ProgrammingLanguage): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    Equals(MCvScalar): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.MCvSeq: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Int32 header_size : Public
    IntPtr h_prev : Public
    IntPtr h_next : Public
    IntPtr v_prev : Public
    IntPtr v_next : Public
    Int32 total : Public
    Int32 elem_size : Public
    IntPtr block_max : Public
    IntPtr ptr : Public
    Int32 delta_elems : Public
    IntPtr storage : Public
    IntPtr free_blocks : Public
    IntPtr first : Public
Struct Emgu.CV.Structure.MCvSeqBlock: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr prev : Public
    IntPtr next : Public
    Int32 start_index : Public
    Int32 count : Public
    IntPtr data : Public
Struct Emgu.CV.Structure.MCvSeqReader: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 header_size : Public
    IntPtr seq : Public
    IntPtr block : Public
    IntPtr ptr : Public
    IntPtr block_min : Public
    IntPtr block_max : Public
    Int32 delta_index : Public
    IntPtr prev_elem : Public
Struct Emgu.CV.Structure.MCvSet: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Int32 header_size : Public
    IntPtr h_prev : Public
    IntPtr h_next : Public
    IntPtr v_prev : Public
    IntPtr v_next : Public
    Int32 total : Public
    Int32 elem_size : Public
    IntPtr block_max : Public
    IntPtr ptr : Public
    Int32 delta_elems : Public
    IntPtr storage : Public
    IntPtr free_blocks : Public
    IntPtr first : Public
    IntPtr free_elems : Public
    Int32 active_count : Public
Struct Emgu.CV.Structure.MCvSetElem: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    IntPtr next_free : Public
Struct Emgu.CV.Structure.MCvSlice: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 start_index : Public
    Int32 end_index : Public
  Properties:
    Emgu.CV.Structure.MCvSlice WholeSeq 'get ' : 
  Methods:
    get_WholeSeq(): PrivateScope, Public, Static, HideBySig, SpecialName
Struct Emgu.CV.Structure.MCvStarKeypoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.Point pt : Public
    Int32 size : Public
    Single response : Public
Struct Emgu.CV.Structure.MCvStereoBMState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 preFilterType : Public
    Int32 preFilterSize : Public
    Int32 preFilterCap : Public
    Int32 SADWindowSize : Public
    Int32 minDisparity : Public
    Int32 numberOfDisparities : Public
    Int32 textureThreshold : Public
    Single uniquenessRatio : Public
    Int32 speckleWindowSize : Public
    Int32 speckleRange : Public
    Int32 trySmallerWindows : Public
    System.Drawing.Rectangle roi1 : Public
    System.Drawing.Rectangle roi2 : Public
    Int32 disp12MaxDiff : Public
    IntPtr preFilteredImg0 : Public
    IntPtr preFilteredImg1 : Public
    IntPtr slidingSumBuf : Public
    IntPtr cost : Public
    IntPtr disp : Public
Struct Emgu.CV.Structure.MCvStereoGCState: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 Ithreshold : Public
    Int32 interactionRadius : Public
    Single K : Public
    Single lambda : Public
    Single lambda1 : Public
    Single lambda2 : Public
    Int32 occlusionCost : Public
    Int32 minDisparity : Public
    Int32 numberOfDisparities : Public
    Int32 maxIters : Public
    IntPtr left : Public
    IntPtr right : Public
    IntPtr dispLeft : Public
    IntPtr dispRight : Public
    IntPtr ptrLeft : Public
    IntPtr ptrRight : Public
    IntPtr vtxBuf : Public
    IntPtr edgeBuf : Public
Struct Emgu.CV.Structure.MCvSubdiv2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Int32 header_size : Public
    IntPtr h_prev : Public
    IntPtr h_next : Public
    IntPtr v_prev : Public
    IntPtr v_next : Public
    Int32 total : Public
    Int32 elem_size : Public
    IntPtr block_max : Public
    IntPtr ptr : Public
    Int32 delta_elems : Public
    IntPtr storage : Public
    IntPtr free_blocks : Public
    IntPtr first : Public
    IntPtr free_elems : Public
    Int32 active_count : Public
    IntPtr edges : Public
    Int32 quad_edges : Public
    Int32 is_geometry_valid : Public
    Emgu.CV.Structure.MCvSubdiv2DEdge recent_edge : Public
    System.Drawing.PointF topleft : Public
    System.Drawing.PointF bottomright : Public
Struct Emgu.CV.Structure.MCvSubdiv2DEdge: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr edge : Public
  Methods:
    cvSubdiv2DEdgeOrg(): PrivateScope, Public, HideBySig
    cvSubdiv2DEdgeDst(): PrivateScope, Public, HideBySig
    cvSubdiv2DRotateEdge(Int32): PrivateScope, Public, HideBySig
    cvSubdiv2DGetEdge(CV_NEXT_EDGE_TYPE): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvSubdiv2DPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 flags : Public
    Emgu.CV.Structure.MCvSubdiv2DEdge first : Public
    System.Drawing.PointF pt : Public
    Int32 id : Public
  Properties:
    Boolean IsValid 'get ' : 
  Methods:
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.MCvSURFParams: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Int32 extended : Public
    Double hessianThreshold : Public
    Int32 nOctaves : Public
    Int32 nOctaveLayers : Public
  Methods:
    DetectKeyPoints(Image`2, Image`2): PrivateScope, Public, HideBySig
    DetectFeatures(Image`2, Image`2): PrivateScope, Public, HideBySig
    ComputeDescriptors(Image`2, Image`2, MKeyPoint[]): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.MCvSURFPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.PointF pt : Public
    Int32 laplacian : Public
    Int32 size : Public
    Single dir : Public
    Single hessian : Public
Struct Emgu.CV.Structure.MCvTermCriteria: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Double): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.CvEnum.TERMCRIT type : Public
    Int32 max_iter : Public
    Double epsilon : Public
Struct Emgu.CV.Structure.MIplImage: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 nSize : Public
    Int32 ID : Public
    Int32 nChannels : Public
    Int32 alphaChannel : Public
    Emgu.CV.CvEnum.IPL_DEPTH depth : Public
    Byte[] colorModel : Public, HasFieldMarshal
    Byte[] channelSeq : Public, HasFieldMarshal
    Int32 dataOrder : Public
    Int32 origin : Public
    Int32 align : Public
    Int32 width : Public
    Int32 height : Public
    IntPtr roi : Public
    IntPtr maskROI : Public
    IntPtr imageId : Public
    IntPtr tileInfo : Public
    Int32 imageSize : Public
    IntPtr imageData : Public
    Int32 widthStep : Public
    Int32[] BorderMode : Public, HasFieldMarshal
    Int32[] BorderConst : Public, HasFieldMarshal
    IntPtr imageDataOrigin : Public
Struct Emgu.CV.Structure.MKeyPoint: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    System.Drawing.PointF Point : Public
    Single Size : Public
    Single Angle : Public
    Single Response : Public
    Int32 Octave : Public
    Int32 ClassId : Public
Struct Emgu.CV.Structure.RangeF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, Serializable, BeforeFieldInit
  :System.ValueType
    Void .ctor(Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.RangeF]
  Properties:
    Single Min 'get set' : 
    Single Max 'get set' : 
  Methods:
    get_Min(): PrivateScope, Public, HideBySig, SpecialName
    set_Min(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Max(): PrivateScope, Public, HideBySig, SpecialName
    set_Max(Single): PrivateScope, Public, HideBySig, SpecialName
    Equals(RangeF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.PlanarObjectDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    Train(Image`2, Int32, Int32, Int32, Int32, Int32, LDetector&, PatchGenerator&): PrivateScope, Public, HideBySig
    Detect(Image`2, HomographyMatrix): PrivateScope, Public, HideBySig
    GetModelPoints(): PrivateScope, Public, HideBySig
Class Emgu.CV.PlanarSubdivision: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.Drawing.Rectangle ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Drawing.PointF[], Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Emgu.CV.Structure.MCvQuadEdge2D]
    System.Collections.IEnumerable
  Properties:
    Emgu.CV.Structure.MCvSubdiv2D MCvSubdiv2D 'get ' : 
  Methods:
    Insert(PointF[], Boolean): PrivateScope, Public, HideBySig
    Insert(PointF): PrivateScope, Public, HideBySig
    Locate(PointF&, Nullable`1&(Out), Nullable`1&(Out)): PrivateScope, Public, HideBySig
    get_MCvSubdiv2D(): PrivateScope, Public, HideBySig, SpecialName
    FindNearestPoint2D(PointF&): PrivateScope, Public, HideBySig
    GetDelaunayTriangles(): PrivateScope, Public, HideBySig
    GetVoronoiFacets(): PrivateScope, Public, HideBySig
    GetDelaunayTriangles(Boolean): PrivateScope, Public, HideBySig
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.VoronoiFacet: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Point 'get set' : 
    System.Drawing.PointF[] Vertices 'get set' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Point(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Vertices(): PrivateScope, Public, HideBySig, SpecialName
    set_Vertices(PointF[]): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.LineSegment2D: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.Point, System.Drawing.Point): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.Point P1 'get set' : 
    System.Drawing.Point P2 'get set' : 
    System.Drawing.PointF Direction 'get ' : 
    Double Length 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(Point): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(Point): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    Side(Point): PrivateScope, Public, HideBySig
    GetExteriorAngleDegree(LineSegment2D): PrivateScope, Public, HideBySig
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.LineSegment2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF P1 'get set' : 
    System.Drawing.PointF P2 'get set' : 
    Double Length 'get ' : 
    System.Drawing.PointF Direction 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
    get_Direction(): PrivateScope, Public, HideBySig, SpecialName
    YByX(Single): PrivateScope, Public, HideBySig
    Side(PointF): PrivateScope, Public, HideBySig
    GetExteriorAngleDegree(LineSegment2DF): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.LineSegment3DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvPoint3D32f P1 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f P2 'get set' : 
    Double Length 'get ' : 
  Methods:
    get_P1(): PrivateScope, Public, HideBySig, SpecialName
    set_P1(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_P2(): PrivateScope, Public, HideBySig, SpecialName
    set_P2(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_Length(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.PointCollection: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    Line2DFitting(PointF[], DIST_TYPE, PointF&(Out), PointF&(Out)): PrivateScope, Public, Static, HideBySig
    EllipseLeastSquareFitting(PointF[]): PrivateScope, Public, Static, HideBySig
    PolyLine(PointF[], Boolean): PrivateScope, Public, Static, HideBySig
    PolyLine(Point[], Boolean): PrivateScope, Public, Static, HideBySig
    ConvexHull(PointF[], MemStorage, ORIENTATION): PrivateScope, Public, Static, HideBySig
    BoundingRectangle(PointF[]): PrivateScope, Public, Static, HideBySig
    MinAreaRect(PointF[]): PrivateScope, Public, Static, HideBySig
    MinEnclosingCircle(PointF[]): PrivateScope, Public, Static, HideBySig
    ReprojectImageTo3D(Image`2, Matrix`1): PrivateScope, Public, Static, HideBySig
    GeneratePointCloud(Ellipse, Int32): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Reflection.ExposableMethodAttribute: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  :System.Attribute
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean Exposable 'get set' : 
    System.String Category 'get set' : 
    Int32[] GenericParametersOptionSizes 'get set' : 
    System.Type[] GenericParametersOptions 'get set' : 
  Methods:
    get_Exposable(): PrivateScope, Public, HideBySig, SpecialName
    set_Exposable(Boolean): PrivateScope, Public, HideBySig, SpecialName
    get_Category(): PrivateScope, Public, HideBySig, SpecialName
    set_Category(String): PrivateScope, Public, HideBySig, SpecialName
    get_GenericParametersOptionSizes(): PrivateScope, Public, HideBySig, SpecialName
    set_GenericParametersOptionSizes(Int32[]): PrivateScope, Public, HideBySig, SpecialName
    get_GenericParametersOptions(): PrivateScope, Public, HideBySig, SpecialName
    set_GenericParametersOptions(Type[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Reflection.GenericParameter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(System.Type, System.Type[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Type SelectedType 'get set' : 
    System.Type[] AvailableTypes 'get set' : 
  Methods:
    get_SelectedType(): PrivateScope, Public, HideBySig, SpecialName
    set_SelectedType(Type): PrivateScope, Public, HideBySig, SpecialName
    get_AvailableTypes(): PrivateScope, Public, HideBySig, SpecialName
    set_AvailableTypes(Type[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Reflection.ReflectColorType: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetDisplayColorOfChannels(IColor): PrivateScope, Public, Static, HideBySig
    GetNamesOfChannels(IColor): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.Reflection.ReflectIImage: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Methods:
    GetImageMethods(IImage): PrivateScope, Public, Static, HideBySig
    GetTypeOfColor(IImage): PrivateScope, Public, Static, HideBySig
    GetTypeOfDepth(IImage): PrivateScope, Public, Static, HideBySig
    GetPixelColor(IImage, Point): PrivateScope, Public, Static, HideBySig
Class Emgu.CV.RTreeClassifier`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 NumberOfClasses 'get ' : 
  Methods:
    Train(Image`2, Point[], Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig
    get_NumberOfClasses(): PrivateScope, Public, HideBySig, SpecialName
    GetSigniture(Image`2, Point, Int32): PrivateScope, Public, HideBySig
Class Emgu.CV.SelfSimDescriptor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 DescriptorSize 'get ' : 
  Methods:
    get_DescriptorSize(): PrivateScope, Public, HideBySig, SpecialName
    Compute(Image`2, Size, Point[]): PrivateScope, Public, HideBySig
Struct Emgu.CV.Structure.CircleF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.CircleF]
  Properties:
    System.Drawing.PointF Center 'get set' : 
    Single Radius 'get set' : 
    Double Area 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Radius(): PrivateScope, Public, HideBySig, SpecialName
    set_Radius(Single): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    Equals(CircleF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.Cross2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, Single, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.Drawing.PointF Center 'get set' : 
    System.Drawing.SizeF Size 'get set' : 
    Emgu.CV.Structure.LineSegment2DF Horizontal 'get ' : 
    Emgu.CV.Structure.LineSegment2DF Vertical 'get ' : 
  Methods:
    get_Center(): PrivateScope, Public, HideBySig, SpecialName
    set_Center(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
    set_Size(SizeF): PrivateScope, Public, HideBySig, SpecialName
    get_Horizontal(): PrivateScope, Public, HideBySig, SpecialName
    get_Vertical(): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.Structure.Ellipse: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.SizeF, Single): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Structure.MCvBox2D): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvBox2D MCvBox2D 'get set' : 
  Methods:
    get_MCvBox2D(): PrivateScope, Public, HideBySig, SpecialName
    set_MCvBox2D(MCvBox2D): PrivateScope, Public, HideBySig, SpecialName
Interface Emgu.CV.IConvexPolygon: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Methods:
    GetVertices(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Struct Emgu.CV.Structure.Triangle2DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(System.Drawing.PointF, System.Drawing.PointF, System.Drawing.PointF): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.IConvexPolygonF
    System.IEquatable`1[Emgu.CV.Structure.Triangle2DF]
  Properties:
    System.Drawing.PointF V0 'get set' : 
    System.Drawing.PointF V1 'get set' : 
    System.Drawing.PointF V2 'get set' : 
    Double Area 'get ' : 
    System.Drawing.PointF Centeroid 'get ' : 
  Methods:
    get_V0(): PrivateScope, Public, HideBySig, SpecialName
    set_V0(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_V1(): PrivateScope, Public, HideBySig, SpecialName
    set_V1(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_V2(): PrivateScope, Public, HideBySig, SpecialName
    set_V2(PointF): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Centeroid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Triangle2DF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    GetVertices(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Struct Emgu.CV.Structure.Triangle3DF: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f, Emgu.CV.Structure.MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IEquatable`1[Emgu.CV.Structure.Triangle3DF]
  Properties:
    Emgu.CV.Structure.MCvPoint3D32f V0 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f V1 'get set' : 
    Emgu.CV.Structure.MCvPoint3D32f V2 'get set' : 
    Double Area 'get ' : 
    Emgu.CV.Structure.MCvPoint3D32f Normal 'get ' : 
    Emgu.CV.Structure.MCvPoint3D32f Centeroid 'get ' : 
  Methods:
    get_V0(): PrivateScope, Public, HideBySig, SpecialName
    set_V0(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_V1(): PrivateScope, Public, HideBySig, SpecialName
    set_V1(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_V2(): PrivateScope, Public, HideBySig, SpecialName
    set_V2(MCvPoint3D32f): PrivateScope, Public, HideBySig, SpecialName
    get_Area(): PrivateScope, Public, HideBySig, SpecialName
    get_Normal(): PrivateScope, Public, HideBySig, SpecialName
    get_Centeroid(): PrivateScope, Public, HideBySig, SpecialName
    Equals(Triangle3DF): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.SparseMatrix`1[TDepth]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Item [Int32, Int32] 'get set' : 
  Methods:
    get_Item(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, Int32, Double): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.StarDetector: AutoLayout, AnsiClass, Class, Public, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    Int32 MaxSize : Public
    Int32 ResponseThreshold : Public
    Int32 LineThresholdProjected : Public
    Int32 LineThresholdBinarized : Public
    Int32 SuppressNonmaxSize : Public
  Methods:
    SetDefaultParameters(): PrivateScope, Public, HideBySig
    DetectKeyPoints(Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.StereoBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Emgu.CV.CvEnum.STEREO_BM_TYPE, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.Structure.MCvStereoBMState State : Public
  Methods:
    FindStereoCorrespondence(Image`2, Image`2, Image`2): PrivateScope, Public, HideBySig
    FindStereoCorrespondence(Image`2, Image`2, Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.StereoGC: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.Structure.MCvStereoGCState State : Public
  Methods:
    FindStereoCorrespondence(Image`2, Image`2, Image`2, Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.StereoSGBM: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    FindStereoCorrespondence(Image`2, Image`2, Image`2): PrivateScope, Public, HideBySig
Class Emgu.CV.StructSize: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed
  Properties:
    Int32 PointF 'get ' : 
    Int32 RangF 'get ' : 
    Int32 MCvPoint2D64f 'get ' : 
    Int32 MCvMat 'get ' : 
    Int32 MCvSeq 'get ' : 
    Int32 MCvContour 'get ' : 
    Int32 MIplImage 'get ' : 
    Int32 MCvSeqBlock 'get ' : 
    Int32 MCvPoint3D32f 'get ' : 
    Int32 MCvMatND 'get ' : 
    Int32 MCvHistogram 'get ' : 
    Int32 MCvBlob 'get ' : 
  Methods:
    get_PointF(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_RangF(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvPoint2D64f(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvMat(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvSeq(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvContour(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MIplImage(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvSeqBlock(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvPoint3D32f(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvMatND(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvHistogram(): PrivateScope, Public, Static, HideBySig, SpecialName
    get_MCvBlob(): PrivateScope, Public, Static, HideBySig, SpecialName
Class Emgu.CV.StructuringElementEx: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Int32[,], Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32, Int32, Int32, Emgu.CV.CvEnum.CV_ELEMENT_SHAPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.SURFFeature: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
    Void .ctor(Emgu.CV.Structure.MCvSURFPoint ByRef, Single[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvSURFPoint Point 'get set' : 
    Single[] Descriptor 'get set' : 
  Methods:
    get_Point(): PrivateScope, Public, HideBySig, SpecialName
    set_Point(MCvSURFPoint): PrivateScope, Public, HideBySig, SpecialName
    get_Descriptor(): PrivateScope, Public, HideBySig, SpecialName
    set_Descriptor(Single[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.SURFTracker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.DisposableObject
    Void .ctor(Emgu.CV.SURFFeature[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    CamShiftTrack(SURFFeature[], MCvBox2D, Image`2): PrivateScope, Public, HideBySig
    Detect(SURFFeature[], Double): PrivateScope, Public, HideBySig
    GetHomographyMatrixFromMatchedFeatures(MatchedSURFFeature[]): PrivateScope, Public, Static, HideBySig
    VoteForUniqueness(MatchedSURFFeature[], Double): PrivateScope, Public, Static, HideBySig
    VoteForSizeAndOrientation(MatchedSURFFeature[], Double, Int32): PrivateScope, Public, Static, HideBySig
    MatchFeature(SURFFeature[], Int32, Int32): PrivateScope, Public, HideBySig
Struct Emgu.CV.SURFTracker+SimilarFeature: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Double, Emgu.CV.SURFFeature): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Double Distance 'get set' : 
    Emgu.CV.SURFFeature Feature 'get set' : 
  Methods:
    get_Distance(): PrivateScope, Public, HideBySig, SpecialName
    set_Distance(Double): PrivateScope, Public, HideBySig, SpecialName
    get_Feature(): PrivateScope, Public, HideBySig, SpecialName
    set_Feature(SURFFeature): PrivateScope, Public, HideBySig, SpecialName
Struct Emgu.CV.SURFTracker+MatchedSURFFeature: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
    Void .ctor(Emgu.CV.SURFFeature, Emgu.CV.SURFFeature[], Double[]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    Emgu.CV.SURFFeature ObservedFeature : Public
  Properties:
    SimilarFeature[] SimilarFeatures 'get set' : 
  Methods:
    get_SimilarFeatures(): PrivateScope, Public, HideBySig, SpecialName
    set_SimilarFeatures(SimilarFeature[]): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.TimedImage`2[TColor,TDepth]: AutoLayout, AnsiClass, Class, Public, Serializable, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Type parameter: TDepth,  DefaultConstructor
  :Emgu.CV.Image`2[TColor,TDepth]
    Void .ctor(Int32, Int32, TColor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    System.DateTime Timestamp 'get set' : 
  Methods:
    get_Timestamp(): PrivateScope, Public, HideBySig, SpecialName
    set_Timestamp(DateTime): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.Util: AutoLayout, AnsiClass, Class, Public, Abstract, Sealed, BeforeFieldInit
  Fields:
    System.Drawing.Imaging.ColorPalette GrayscalePalette : Public, Static, InitOnly
  Methods:
    ColorPaletteToLookupTable(ColorPalette, Matrix`1&(Out), Matrix`1&(Out), Matrix`1&(Out), Matrix`1&(Out)): PrivateScope, Public, Static, HideBySig
    GetModuleInfo(String&(Out), String&(Out)): PrivateScope, Public, Static, HideBySig
    OptimizeCV(Boolean): PrivateScope, Public, Static, HideBySig
    GetMatrixDepth(Type): PrivateScope, Public, Static, HideBySig
    GetMatrixFromDescriptors(Single[][]): PrivateScope, Public, Static, HideBySig
Interface Emgu.CV.VideoSurveillance.IBGFGDetector`1[TColor]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] ForgroundMask 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] BackgroundMask 'get ' : 
  Methods:
    Update(Image`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_ForgroundMask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_BackgroundMask(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
Class Emgu.CV.VideoSurveillance.BGCodeBookModel`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.VideoSurveillance.IBGFGDetector`1[TColor]
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] ForgroundMask 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] BackgroundMask 'get ' : 
    Emgu.CV.Structure.MCvBGCodeBookModel MCvBGCodeBookModel 'get set' : 
  Methods:
    Update(Image`2, Rectangle, Image`2): PrivateScope, Public, HideBySig
    Update(Image`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ForgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    ClearStale(Int32, Rectangle, Image`2): PrivateScope, Public, HideBySig
    get_MCvBGCodeBookModel(): PrivateScope, Public, HideBySig, SpecialName
    set_MCvBGCodeBookModel(MCvBGCodeBookModel): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.VideoSurveillance.BGStatModel`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.Image`2[TColor,System.Byte], Emgu.CV.CvEnum.BG_STAT_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Emgu.CV.Image`2[TColor,System.Byte], Emgu.CV.Structure.MCvFGDStatModelParams ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.VideoSurveillance.IBGFGDetector`1[TColor]
  Properties:
    Emgu.CV.Structure.MCvBGStatModel MCvBGStatModel 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] BackgroundMask 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] ForgroundMask 'get ' : 
  Methods:
    Update(Image`2, Double): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Update(Image`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_MCvBGStatModel(): PrivateScope, Public, HideBySig, SpecialName
    get_BackgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_ForgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.VideoSurveillance.BlobDetector: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.BLOB_DETECTOR_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    DetectNewBlob(IImage, Image`2, BlobSeq, BlobSeq): PrivateScope, Public, HideBySig
Class Emgu.CV.VideoSurveillance.BlobSeqBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
  Interfaces:
    System.Collections.Generic.IEnumerable`1[Emgu.CV.Structure.MCvBlob]
    System.Collections.IEnumerable
  Properties:
    Int32 Count 'get ' : 
    Emgu.CV.Structure.MCvBlob Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    GetBlobByID(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    GetEnumerator(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
Class Emgu.CV.VideoSurveillance.BlobSeq: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BlobSeqBase
    Void .ctor(IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Int32 Count 'get ' : 
    Emgu.CV.Structure.MCvBlob Item [Int32] 'get ' : 
  Methods:
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlobByID(Int32): PrivateScope, Public, Virtual, HideBySig
Class Emgu.CV.VideoSurveillance.BlobTracker: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.CV.VideoSurveillance.BlobSeqBase
    Void .ctor(Emgu.CV.CvEnum.BLOBTRACKER_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Structure.MCvBlob Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Add(MCvBlob, IImage, Image`2): PrivateScope, Public, HideBySig
    RemoveAt(Int32): PrivateScope, Public, HideBySig
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlobByID(Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Emgu.CV.VideoSurveillance.BlobTrackerAuto`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  :Emgu.CV.VideoSurveillance.BlobSeqBase
    Void .ctor(Emgu.CV.VideoSurveillance.BlobTrackerAutoParam`1[TColor]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] ForgroundMask 'get ' : 
    Emgu.CV.VideoSurveillance.BlobTrackerAutoParam`1[TColor] Param 'get ' : 
    Emgu.CV.Structure.MCvBlob Item [Int32] 'get ' : 
    Int32 Count 'get ' : 
  Methods:
    Process(Image`2): PrivateScope, Public, HideBySig
    Process(Image`2, Image`2): PrivateScope, Public, HideBySig
    get_ForgroundMask(): PrivateScope, Public, HideBySig, SpecialName
    get_Param(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, SpecialName
    GetBlobByID(Int32): PrivateScope, Public, Virtual, HideBySig
    get_Count(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class Emgu.CV.VideoSurveillance.BlobTrackerAutoParam`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    IntPtr BTGen : Public
    IntPtr BTA : Public
  Properties:
    Emgu.CV.VideoSurveillance.BlobTrackPostProc BTPP 'get set' : 
    Emgu.CV.VideoSurveillance.BlobDetector BlobDetector 'get set' : 
    Emgu.CV.VideoSurveillance.BlobTracker BlobTracker 'get set' : 
    Int32 FGTrainFrames 'get set' : 
    Emgu.CV.VideoSurveillance.FGDetector`1[TColor] FGDetector 'get set' : 
    Int32 UsePPData 'get set' : 
    Emgu.CV.Structure.MCvBlobTrackerAutoParam1 MCvBlobTrackerAutoParam1 'get ' : 
  Methods:
    get_BTPP(): PrivateScope, Public, HideBySig, SpecialName
    set_BTPP(BlobTrackPostProc): PrivateScope, Public, HideBySig, SpecialName
    get_BlobDetector(): PrivateScope, Public, HideBySig, SpecialName
    set_BlobDetector(BlobDetector): PrivateScope, Public, HideBySig, SpecialName
    get_BlobTracker(): PrivateScope, Public, HideBySig, SpecialName
    set_BlobTracker(BlobTracker): PrivateScope, Public, HideBySig, SpecialName
    get_FGTrainFrames(): PrivateScope, Public, HideBySig, SpecialName
    set_FGTrainFrames(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_FGDetector(): PrivateScope, Public, HideBySig, SpecialName
    set_FGDetector(FGDetector`1): PrivateScope, Public, HideBySig, SpecialName
    get_UsePPData(): PrivateScope, Public, HideBySig, SpecialName
    set_UsePPData(Int32): PrivateScope, Public, HideBySig, SpecialName
    get_MCvBlobTrackerAutoParam1(): PrivateScope, Public, HideBySig, SpecialName
Class Emgu.CV.VideoSurveillance.BlobTrackPostProc: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.BLOB_POST_PROCESS_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class Emgu.CV.VideoSurveillance.FGDetector`1[TColor]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TColor, System.ValueType, Emgu.CV.IColor,  NotNullableValueType DefaultConstructor
  :Emgu.Util.UnmanagedObject
    Void .ctor(Emgu.CV.CvEnum.FORGROUND_DETECTOR_TYPE): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Emgu.CV.VideoSurveillance.IBGFGDetector`1[TColor]
  Properties:
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] ForgroundMask 'get ' : 
    Emgu.CV.Image`2[Emgu.CV.Structure.Gray,System.Byte] BackgroundMask 'get ' : 
  Methods:
    Update(Image`2): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask
    get_ForgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
    get_BackgroundMask(): PrivateScope, Public, Final, Virtual, HideBySig, VtableLayoutMask, SpecialName
Class Emgu.CV.VideoWriter: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :Emgu.Util.UnmanagedObject
    Void .ctor(System.String, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.String, Int32, Int32, Int32, Int32, Boolean): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    WriteFrame(Image`2): PrivateScope, Public, HideBySig
