<Fluent:RibbonWindow 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
    xmlns:Imagepro="clr-namespace:ImageProWPF"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
    x:Class="ImageProWPF.MainWindow"
    Title="Crack Extraction and Analysis Application "   Width="800" Icon="images/exe.ico"  Height="600" WindowStartupLocation="CenterScreen" MinWidth="500" MinHeight="300" ResizeMode="CanResizeWithGrip" Background="#FFEBEDF0" Margin="0" GlassBorderThickness="0,20,0,0"
    KeyDown="windowsKeydown">



    <Fluent:RibbonWindow.Resources>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
              Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                              Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="fluentbuttonCalculatetip" TargetType="{x:Type Fluent:Button}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="ToolTip">
                        <Setter.Value>
                            <Fluent:ScreenTip Title="Orange" Width ="250"
                                  Text="Begin to search"                                  
                                  DisableReason="Select two endpoints"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Fluent:RibbonWindow.Resources>
    <Grid Margin="-9,0,-9,-9">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="0.703*"/>
            <ColumnDefinition Width="0.297*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="135"/>
            <RowDefinition Height="0.802*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" MinHeight="26.4"/>
        </Grid.RowDefinitions>
        <Fluent:Ribbon VerticalAlignment="Stretch" Grid.ColumnSpan="2" Height="135" IsQuickAccessToolBarVisible="False" Margin="0">


            <!--Quick Access Toolbar Items-->
            <Fluent:Ribbon.QuickAccessItems>
                <!--Use Content or Target Property to set QAT item-->
                <Fluent:QuickAccessMenuItem/>
                <!--You Can Just Bind with Any Control-->
                <Fluent:QuickAccessMenuItem />
            </Fluent:Ribbon.QuickAccessItems>

            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Visibility="Collapsed">
                    <Fluent:BackstageTabControl>
                        <!--Fluent:BackstageTabItem Header="新建" IsEnabled="False"/-->
                        <!--Fluent:BackstageTabItem Header="打开" IsEnabled="False"/-->
                        <!--Fluent:BackstageTabItem Header="导入" IsEnabled="False"/-->
                        <!--Fluent:BackstageTabItem Header="保存" IsEnabled="False"/-->
                        <!--Fluent:BackstageTabItem Header="打印" IsEnabled="False"/-->
                        <Fluent:Button x:Name="btnAppExit" Header="退出" Click="btnAppExit_Click"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="2D">
                <Fluent:RibbonGroupBox Header="File operation" Height="87.5">
                    <Fluent:Button x:Name="btnImgImport" Header="Import image" Height="55"  Click="btnImgImport_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\imageimport64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnCrackImgSave" Header="Save image" Height="55"  ToolTip="Save current image" Click="btnCrackImgSave_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\imagesave64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnCrackDataSave" Header="Save data" Height="55"  ToolTip="Save crack data" Click="btnSaveCrackdata_Click">
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\datasave64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>                  
                    <Fluent:Button  Header="test..."  Height="55" Click="btntest_Click">
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox Header="Extraction and Computation"  Height="87.5">
                    <Fluent:Button x:Name="btnPickCrackPoint" Header="Select endpoints" Height="55" Click="btnPickCrackPoint_Click" ToolTip="Select two endpoints by mouse(cancel by right click, key S)"
                                   >
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\pick64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <StackPanel Orientation="Horizontal">
                        <Fluent:Button x:Name="btnCalculate" Header="Search" Height="55" Click="btnCalculate_Click"  IsEnabled="False" >
                            <Fluent:Button.ToolTip>
                                <Fluent:ScreenTip  Width ="250" Title="Search" Text="Begin to search (Key Enter)" DisableReason="Select two endpoints"/>
                            </Fluent:Button.ToolTip>
                            <Fluent:Button.LargeIcon>
                                <Image Source="images\search64.png" AllowDrop="False" />
                            </Fluent:Button.LargeIcon>
                        </Fluent:Button>
                        <Expander x:Name="advancedExpander"  ExpandDirection="Right" Height="55" BorderThickness="2" 
                                  ToolTip="Advanced set" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsExpanded="False">
                        	<Grid Width="202.04" Background="#FFE7E7E7">
                        		<CheckBox IsChecked="{Binding Path=Isinvert}"  Content="invert color"
                        			ToolTip="If the target object is brighter color, check it" VerticalContentAlignment="Center" Margin="8,4,95,0" Height="15" VerticalAlignment="Top"  />
                                <CheckBox IsChecked="{Binding Path=Ispresmooth}"  Content="presmooth"
                        			ToolTip="If the image contains lots of noise, it will be pre-smoothed! " VerticalContentAlignment="Center" Margin="95,4,8,0" Height="15" VerticalAlignment="Top"  />
                        		<CheckBox IsChecked="{Binding Path=Iscustomt}"  Content="" RenderTransformOrigin="0.5,0.5"
                        			ToolTip="custom value" Margin="8,23,71,0" d:LayoutOverrides="GridBox" VerticalContentAlignment="Center"/>
                                <TextBox Text="{Binding Path=Tolerate, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=Iscustomt,Mode=OneWay}"  ToolTip="Tolerate of region growing method"
                        			 LostFocus="originthreshTextboxLostFocus" VerticalAlignment="Bottom" Margin="28.04,0,0,5" HorizontalAlignment="Left" Width="64"/>
                        	</Grid>
                        </Expander>
                        <!--高级设置-->
                        <!-- <Expander Name="advancedExpander"  ExpandDirection="Right" Height="55" BorderThickness="2" 
                                  ToolTip="Advanced setting" BorderBrush="#FFE7E7E7" Background="#FFEBEDF0"
                                  HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"  >
                            <Grid Width="357" d:LayoutOverrides="Width" Background="#FFE7E7E7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="135"/>
                                    <ColumnDefinition Width="187*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="27" />
                                    <RowDefinition Height="27" />
                                </Grid.RowDefinitions>
                                <CheckBox IsChecked="{Binding Path=Iscrackdark}"  Content="Darker color"
                                              ToolTip="Is crack color dark?" VerticalContentAlignment="Center" Margin="8,4,31,4"  ></CheckBox>

                                <CheckBox IsChecked="{Binding Path=Isclose}"  Content="Close radius" RenderTransformOrigin="0.5,0.5"
                                              ToolTip="Need closing operation?" Margin="8,4,46,0" Grid.Row="1" d:LayoutOverrides="Height" VerticalContentAlignment="Center">
                                    <CheckBox.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleY="1" ScaleX="1"/>
                                            <SkewTransform AngleY="0" AngleX="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </CheckBox.RenderTransform>
                                </CheckBox>
                                <TextBox Text="{Binding Path=Closeradius,UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding Path=Isclose,Mode=OneWay}" 
                                             Margin="0,7,2,3" Grid.Row="1" HorizontalAlignment="Right" Width="40"
                                             ToolTip="Radius of closing" HorizontalContentAlignment="Center"
                                             LostFocus="closeradiusTextboxLostFocus" VerticalAlignment="Center"/>

                                <TextBlock  Text="Region Growing Threshold"
                                               Grid.Column="1" Margin="10,4,80,4" d:LayoutOverrides="Height" IsEnabled="True"  Visibility="Visible" />
                                <TextBox Text="{Binding Path=Tolerate,UpdateSourceTrigger=PropertyChanged}" ToolTip="Tolerate of region growing method" Grid.Column="1" Margin="0,4,14,6" HorizontalAlignment="Right" Width="57"
                                             LostFocus="originthreshTextboxLostFocus" VerticalAlignment="Center"/>
                                <RadioButton GroupName="reconstructradiobutton" IsChecked="{Binding Path=Isbinaryreconstruct}" Content="二值图重建" Grid.Column="1" Margin="4,4,72,4"
                                                 ToolTip="利用二值化图像重建裂隙"/>
                                    <ComboBox  Grid.Column="1" Margin="85.801,4,0,4" HorizontalAlignment="Left" Width="64.199" VerticalAlignment="Center" 
                                              IsEnabled="{Binding Path=Isbinaryreconstruct,Mode=OneWay}"
                                              SelectedIndex="{Binding Path=Binarymethod}">
                                        <ComboBox.ToolTip>
                                            <ToolTip>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Heavy">二值化方法：</TextBlock>
                                                    <TextBlock>基于边缘：使用Laplacian边缘算子确定二值化阈值</TextBlock>
                                                    <TextBlock>迭代：迭代法计算二值化阈值</TextBlock>
                                                    <TextBlock>OTSU：使用最小类间方差法确定二值化阈值</TextBlock>
                                            </StackPanel>
                                            </ToolTip>
                                        </ComboBox.ToolTip>
                                        <ComboBoxItem Content="基于边缘"/>
                                        <ComboBoxItem Content="迭代"/>
                                        <ComboBoxItem Content="Otsu"/>
                                    </ComboBox> 
                                <CheckBox IsChecked="{Binding Path=Isinterpolate}" Content="插值操作"
                                              ToolTip="是否进行插值操作" Grid.Column="2" Margin="7,4,71,4" Grid.Row="1" VerticalAlignment="Center" /> 
                                 <ComboBox  Grid.Column="2" Margin="76.801,4,0,4" Grid.Row="1" HorizontalAlignment="Left" Width="56.199" VerticalAlignment="Center" 
                                              IsEnabled="{Binding Path=Isinterpolate,Mode=OneWay}"
                                              SelectedIndex="{Binding Path=Interpolatemethod }">
                                        <ComboBox.ToolTip>
                                            <ToolTip>
                                                <StackPanel>
                                                    <TextBlock FontWeight="Heavy">插值方法：</TextBlock>
                                                    <TextBlock>均值：使用裂隙宽大于1的裂隙宽平均值代替裂隙宽为1的点</TextBlock>
                                                    <TextBlock>距离加权：根据距离的远近求每个大于1的裂隙宽的贡献</TextBlock>
                                                </StackPanel>
                                            </ToolTip>
                                        </ComboBox.ToolTip>
                                        <ComboBoxItem Content="均值"/>
										<ComboBoxItem Content="距离加权"/>
									</ComboBox> 

                                <Button Name="btnadvanceddefault"  Content="Default" Margin="39,3,0,5" Grid.Column="1" ToolTip="Default parameter value" BorderThickness="1" Click="btnadvanceddefault_Click" HorizontalAlignment="Left" Width="160" Grid.Row="1">
                                    <Button.Effect>
                                        <DropShadowEffect Direction="305" Color="#FFE1E1E1" Opacity="0.845"/>
                                    </Button.Effect>
                                    <Button.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0"/>
                                            <GradientStop Color="#FFDEC3C3" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Button.Background>
                                </Button>


                            </Grid>

                        </Expander> -->

                    </StackPanel>
                </Fluent:RibbonGroupBox>
                <Fluent:RibbonGroupBox x:Name="calibrationgroupbox" Header="Calibration"  Height="87.5">
                	<Grid Height="65">
                		<Grid.ColumnDefinitions>
                			<ColumnDefinition Width="0.43*"/>
                			<ColumnDefinition Width="0.348*"/>
                			<ColumnDefinition Width="0.222*"/>
                		</Grid.ColumnDefinitions>
                		<Grid.RowDefinitions>
                			<RowDefinition Height="0.333*"/>
                			<RowDefinition Height="0.333*"/>
                			<RowDefinition Height="0.333*"/>
                		</Grid.RowDefinitions>
 
                		<TextBlock Text="measure distance" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,-0.103,0"/>
                        <TextBox HorizontalAlignment="Left" Grid.Column="1" Margin="32,1,5,1" VerticalAlignment="Center" BorderBrush="{x:Null}" IsEnabled="False" Grid.ColumnSpan="2" 
                                 ToolTip="the pixel-distance of the measured line " Text="{Binding Path=Measuredistance}" HorizontalContentAlignment="Center" Width="45" />
                    	<TextBlock Text="actual distance" TextAlignment="Center" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Center" Margin="0,0,-0.103,0" />                   	
                    	<TextBox x:Name="actualdistancetextBox" Width="70" HorizontalAlignment="Center" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="7,1,5,1" 
                                 ToolTip="the actual distance of the measured line"  Text="{Binding Path=Actualdistance}" HorizontalContentAlignment="Center" 
                                 Style="{StaticResource textBoxInError}" LostFocus="actualdistancetextBox_LostFocus"/>
                        <TextBlock Text="pixel size" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Row="2" Margin="0,0,-0.103,0"/>
                    	<TextBox Grid.Row="2" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="70" IsReadOnly="False" IsEnabled="False" Margin="7,1,5,1" BorderBrush="{x:Null}" 
                                 ToolTip="the actual size of each pixel" Text="{Binding Path=Pixelsize, UpdateSourceTrigger=PropertyChanged}" HorizontalContentAlignment="Center" />
                        <Button x:Name="btnMeasurePick" Grid.Column="1" HorizontalAlignment="Left" Margin="10,1,0,1" Width="20" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" ToolTip="choose two points and measure the distance"
                                Click="btnmeasure_Click">
                            <Image Source="images\location_72px.png" />
                        </Button>
                        <Button Grid.Column="2" Grid.RowSpan="3" HorizontalAlignment="Center" VerticalAlignment="Center" Height="59" Margin="3" Width="48" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="#FFE8ECF0" ToolTip="OK" 
                                Click="btncalibrate_Click">
                            <Image Source="images\ok_32px.png" />
                        </Button>
                        
                    </Grid>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
            <!--Fluent:RibbonTabItem Header="主题"/-->
            <Fluent:RibbonTabItem Header="About">
                <Fluent:RibbonGroupBox Header="">
                    <Fluent:Button x:Name="btnAboutAuthor" Header="Author info" Height="55"  Click="btnAboutAuthor_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\authorinfo64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                    <Fluent:Button x:Name="btnPrograminfo" Header="Software info" Height="55"  Click="btnPrograminfo_Click" >
                        <Fluent:Button.LargeIcon>
                            <Image Source="images\programinfo64.png"/>
                        </Fluent:Button.LargeIcon>
                    </Fluent:Button>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

        </Fluent:Ribbon>
        
        
        <StatusBar Name="statusbar"  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.ColumnSpan="2" Grid.Row="3" Height="30">

            <Grid Height="25" Width="Auto" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="100"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Margin="0,0,2,0">
                    <TextBlock Text="{Binding Path=Zoomsize}" Width="30" TextAlignment="Center" ToolTip="Magnification times of image" />
                    <TextBlock Text="%" />
                    <Button BorderThickness="0" Background="{x:Null}" Margin="5,0,0,3" Click="btnzoomin_Click" ToolTip="zoom in">
						<Image Source="Images/zoom_in_72px.png" Height="15" Margin="0,-5,0,0" />
					</Button>
                    <Button BorderThickness="0" Background="{x:Null}" Margin="3,0,0,5" Click="btnzoomout_Click" ToolTip="zoom out">
                        <Image Source="Images/zoom_out_72px.png" Height="15" Margin="0,-4,0,0" />
                    </Button>
                    <TextBlock Text="{Binding Path=sImagesize}" Margin="8,0,0,0" ToolTip="Resolution"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Margin="2,0">                 
                    <TextBlock Text="{Binding Path=Timetaken}" TextAlignment="Right" ToolTip="Runtime of search" />
                    <TextBlock Text="ms" />
                </StackPanel>
                <!-- <StackPanel Orientation="Horizontal" Grid.Column="2" Margin="2,0">                    
                    <TextBox Name="pixelsizetextBox"  Width="50" TextAlignment="Center"                              
                              Style="{StaticResource textBoxInError}" LostFocus="pixelsizetextBox_LostFocus" ToolTip="Physical length of each pixel">
                        <TextBox.Text>
                            <Binding Path="Pixelsize" UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <Imagepro:PixelSizeRule />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </StackPanel> -->
                <StackPanel Orientation="Horizontal" Grid.Column="3" Margin="5,0,2,0">
                    <TextBlock x:Name="PromptTextBox" Text="{Binding Path=Prompt}" Foreground="Red"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Column="5" Margin="2,0">
                    <TextBlock Text="v2.0" TextAlignment="Center" Width="100"/>
                </StackPanel>
            </Grid>

        </StatusBar>
        <ScrollViewer x:Name="imagescrollviewer"  Grid.Row="1" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.RowSpan="2" PreviewMouseWheel="imagescrollviewer_MouseWheel" MouseRightButtonDown="imagescrollviewer_MouseRightButtonDown">
            <Image x:Name="imageshowbox" 
                   MouseLeftButtonDown="imageshowbox_MouseLeftButtonDown" MouseMove="imageshowbox_MouseMove" MouseLeftButtonUp="imageshowbox_MouseLeftButtonUp" MouseLeave="imageshowbox_MouseLeave"/>
        </ScrollViewer>
        <GridSplitter Grid.Column="1" HorizontalAlignment="Left" Grid.Row="1" Width="4" Grid.RowSpan="2">
            <GridSplitter.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <LinearGradientBrush.RelativeTransform>
                        <TransformGroup>
                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                            <RotateTransform Angle="-90" CenterY="0.5" CenterX="0.5"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </LinearGradientBrush.RelativeTransform>
                    <GradientStop Color="#FFC9C9C9"/>
                    <GradientStop Color="#FFEBEDF0" Offset="1"/>
                </LinearGradientBrush>
            </GridSplitter.Background>
        </GridSplitter>
        <ListView Name="datalistview"  Grid.Row="1" Grid.Column="1" SelectionChanged="ListView_SelectionChanged" Margin="4,32,0,0" SelectionMode="Single" >
            <ListView.View >
                <GridView>
                    <GridViewColumn Header="Order" Width="40" DisplayMemberBinding="{Binding Path=No}"></GridViewColumn>
                    <GridViewColumn Header="Length" Width="60" DisplayMemberBinding="{Binding Path=Length}"></GridViewColumn>
                    <GridViewColumn Header="Mean Width" Width="60" DisplayMemberBinding="{Binding Path=Meanwidth}"></GridViewColumn>
                    <GridViewColumn Header="Max Width" Width="60" DisplayMemberBinding="{Binding Path=Maxwidth}"></GridViewColumn>
                    <GridViewColumn Header="Min Width" Width="60" DisplayMemberBinding="{Binding Path=Minwidth}"></GridViewColumn>
                    <GridViewColumn Header="Angle" Width="60" DisplayMemberBinding="{Binding Path=Angle}"></GridViewColumn>
                    <GridViewColumn Header="Area" Width="60" DisplayMemberBinding="{Binding Path=Area}"></GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>
        <ToolBar   Grid.Column="1" Height="32" Grid.Row="1" VerticalAlignment="Top" Margin="4,0,0,0">
            <Button Name="btnSaveCrackdata"  Width="32" Height="32" Click="btnSaveCrackdata_Click"  ToolTip="Save data to Excel">
                <Image Source="images/datasave48.png"/>
            </Button>
            <Button Name="btnDeleteCrack"  Width="32" Height="32" Click="btnDeleteCrack_Click" ToolTip="Delete the selected crack(forbidden in selecting mode)" >
                <Image Source="images/delete32.png"/>
            </Button>
        </ToolBar>

        <ListBox Name="suminfolistbox"  Grid.Column="1" Grid.Row="2" Height="80" Margin="4,0,0,0" Background="#FFF0F0F0" IsEnabled="False">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBoxItem Grid.Row="0" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Crack Count" Width="70"/>
                    <TextBlock Text="{Binding Path=Cracknum}"  Width="80"  Height="25"/>
                </StackPanel>
            </ListBoxItem>
            <ListBoxItem Grid.Row="1" >
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Crack ratio" Width="70"/>
                    <TextBlock Text="{Binding Path=Arearatio}" Width="80" Height="25"/>
                </StackPanel>
            </ListBoxItem>
        </ListBox>
    </Grid>
</Fluent:RibbonWindow>
